using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SAEON.Observations.Data{
    /// <summary>
    /// Strongly-typed collection for the VSensorExpansion class.
    /// </summary>
    [Serializable]
    public partial class VSensorExpansionCollection : ReadOnlyList<VSensorExpansion, VSensorExpansionCollection>
    {        
        public VSensorExpansionCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the vSensorExpansion view.
    /// </summary>
    [Serializable]
    public partial class VSensorExpansion : ReadOnlyRecord<VSensorExpansion>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("vSensorExpansion", TableType.View, DataService.GetInstance("ObservationsDB"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarSensorID = new TableSchema.TableColumn(schema);
                colvarSensorID.ColumnName = "SensorID";
                colvarSensorID.DataType = DbType.Guid;
                colvarSensorID.MaxLength = 0;
                colvarSensorID.AutoIncrement = false;
                colvarSensorID.IsNullable = false;
                colvarSensorID.IsPrimaryKey = false;
                colvarSensorID.IsForeignKey = false;
                colvarSensorID.IsReadOnly = false;
                
                schema.Columns.Add(colvarSensorID);
                
                TableSchema.TableColumn colvarSensorCode = new TableSchema.TableColumn(schema);
                colvarSensorCode.ColumnName = "SensorCode";
                colvarSensorCode.DataType = DbType.AnsiString;
                colvarSensorCode.MaxLength = 75;
                colvarSensorCode.AutoIncrement = false;
                colvarSensorCode.IsNullable = false;
                colvarSensorCode.IsPrimaryKey = false;
                colvarSensorCode.IsForeignKey = false;
                colvarSensorCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarSensorCode);
                
                TableSchema.TableColumn colvarSensorName = new TableSchema.TableColumn(schema);
                colvarSensorName.ColumnName = "SensorName";
                colvarSensorName.DataType = DbType.AnsiString;
                colvarSensorName.MaxLength = 150;
                colvarSensorName.AutoIncrement = false;
                colvarSensorName.IsNullable = false;
                colvarSensorName.IsPrimaryKey = false;
                colvarSensorName.IsForeignKey = false;
                colvarSensorName.IsReadOnly = false;
                
                schema.Columns.Add(colvarSensorName);
                
                TableSchema.TableColumn colvarSensorDescription = new TableSchema.TableColumn(schema);
                colvarSensorDescription.ColumnName = "SensorDescription";
                colvarSensorDescription.DataType = DbType.AnsiString;
                colvarSensorDescription.MaxLength = 5000;
                colvarSensorDescription.AutoIncrement = false;
                colvarSensorDescription.IsNullable = true;
                colvarSensorDescription.IsPrimaryKey = false;
                colvarSensorDescription.IsForeignKey = false;
                colvarSensorDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarSensorDescription);
                
                TableSchema.TableColumn colvarSensorUrl = new TableSchema.TableColumn(schema);
                colvarSensorUrl.ColumnName = "SensorUrl";
                colvarSensorUrl.DataType = DbType.AnsiString;
                colvarSensorUrl.MaxLength = 250;
                colvarSensorUrl.AutoIncrement = false;
                colvarSensorUrl.IsNullable = true;
                colvarSensorUrl.IsPrimaryKey = false;
                colvarSensorUrl.IsForeignKey = false;
                colvarSensorUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarSensorUrl);
                
                TableSchema.TableColumn colvarInstrumenSensorStartDate = new TableSchema.TableColumn(schema);
                colvarInstrumenSensorStartDate.ColumnName = "InstrumenSensorStartDate";
                colvarInstrumenSensorStartDate.DataType = DbType.DateTime;
                colvarInstrumenSensorStartDate.MaxLength = 0;
                colvarInstrumenSensorStartDate.AutoIncrement = false;
                colvarInstrumenSensorStartDate.IsNullable = true;
                colvarInstrumenSensorStartDate.IsPrimaryKey = false;
                colvarInstrumenSensorStartDate.IsForeignKey = false;
                colvarInstrumenSensorStartDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInstrumenSensorStartDate);
                
                TableSchema.TableColumn colvarInstrumenSensorEndDate = new TableSchema.TableColumn(schema);
                colvarInstrumenSensorEndDate.ColumnName = "InstrumenSensorEndDate";
                colvarInstrumenSensorEndDate.DataType = DbType.DateTime;
                colvarInstrumenSensorEndDate.MaxLength = 0;
                colvarInstrumenSensorEndDate.AutoIncrement = false;
                colvarInstrumenSensorEndDate.IsNullable = true;
                colvarInstrumenSensorEndDate.IsPrimaryKey = false;
                colvarInstrumenSensorEndDate.IsForeignKey = false;
                colvarInstrumenSensorEndDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInstrumenSensorEndDate);
                
                TableSchema.TableColumn colvarInstrumentID = new TableSchema.TableColumn(schema);
                colvarInstrumentID.ColumnName = "InstrumentID";
                colvarInstrumentID.DataType = DbType.Guid;
                colvarInstrumentID.MaxLength = 0;
                colvarInstrumentID.AutoIncrement = false;
                colvarInstrumentID.IsNullable = false;
                colvarInstrumentID.IsPrimaryKey = false;
                colvarInstrumentID.IsForeignKey = false;
                colvarInstrumentID.IsReadOnly = false;
                
                schema.Columns.Add(colvarInstrumentID);
                
                TableSchema.TableColumn colvarInstrumentCode = new TableSchema.TableColumn(schema);
                colvarInstrumentCode.ColumnName = "InstrumentCode";
                colvarInstrumentCode.DataType = DbType.AnsiString;
                colvarInstrumentCode.MaxLength = 50;
                colvarInstrumentCode.AutoIncrement = false;
                colvarInstrumentCode.IsNullable = false;
                colvarInstrumentCode.IsPrimaryKey = false;
                colvarInstrumentCode.IsForeignKey = false;
                colvarInstrumentCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarInstrumentCode);
                
                TableSchema.TableColumn colvarInstrumentName = new TableSchema.TableColumn(schema);
                colvarInstrumentName.ColumnName = "InstrumentName";
                colvarInstrumentName.DataType = DbType.AnsiString;
                colvarInstrumentName.MaxLength = 150;
                colvarInstrumentName.AutoIncrement = false;
                colvarInstrumentName.IsNullable = false;
                colvarInstrumentName.IsPrimaryKey = false;
                colvarInstrumentName.IsForeignKey = false;
                colvarInstrumentName.IsReadOnly = false;
                
                schema.Columns.Add(colvarInstrumentName);
                
                TableSchema.TableColumn colvarInstrumentDescription = new TableSchema.TableColumn(schema);
                colvarInstrumentDescription.ColumnName = "InstrumentDescription";
                colvarInstrumentDescription.DataType = DbType.AnsiString;
                colvarInstrumentDescription.MaxLength = 5000;
                colvarInstrumentDescription.AutoIncrement = false;
                colvarInstrumentDescription.IsNullable = true;
                colvarInstrumentDescription.IsPrimaryKey = false;
                colvarInstrumentDescription.IsForeignKey = false;
                colvarInstrumentDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarInstrumentDescription);
                
                TableSchema.TableColumn colvarInstrumentUrl = new TableSchema.TableColumn(schema);
                colvarInstrumentUrl.ColumnName = "InstrumentUrl";
                colvarInstrumentUrl.DataType = DbType.AnsiString;
                colvarInstrumentUrl.MaxLength = 250;
                colvarInstrumentUrl.AutoIncrement = false;
                colvarInstrumentUrl.IsNullable = true;
                colvarInstrumentUrl.IsPrimaryKey = false;
                colvarInstrumentUrl.IsForeignKey = false;
                colvarInstrumentUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarInstrumentUrl);
                
                TableSchema.TableColumn colvarInstrumentStartDate = new TableSchema.TableColumn(schema);
                colvarInstrumentStartDate.ColumnName = "InstrumentStartDate";
                colvarInstrumentStartDate.DataType = DbType.Date;
                colvarInstrumentStartDate.MaxLength = 0;
                colvarInstrumentStartDate.AutoIncrement = false;
                colvarInstrumentStartDate.IsNullable = true;
                colvarInstrumentStartDate.IsPrimaryKey = false;
                colvarInstrumentStartDate.IsForeignKey = false;
                colvarInstrumentStartDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInstrumentStartDate);
                
                TableSchema.TableColumn colvarInstrumentEndDate = new TableSchema.TableColumn(schema);
                colvarInstrumentEndDate.ColumnName = "InstrumentEndDate";
                colvarInstrumentEndDate.DataType = DbType.Date;
                colvarInstrumentEndDate.MaxLength = 0;
                colvarInstrumentEndDate.AutoIncrement = false;
                colvarInstrumentEndDate.IsNullable = true;
                colvarInstrumentEndDate.IsPrimaryKey = false;
                colvarInstrumentEndDate.IsForeignKey = false;
                colvarInstrumentEndDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInstrumentEndDate);
                
                TableSchema.TableColumn colvarStationInstrumentStartDate = new TableSchema.TableColumn(schema);
                colvarStationInstrumentStartDate.ColumnName = "StationInstrumentStartDate";
                colvarStationInstrumentStartDate.DataType = DbType.DateTime;
                colvarStationInstrumentStartDate.MaxLength = 0;
                colvarStationInstrumentStartDate.AutoIncrement = false;
                colvarStationInstrumentStartDate.IsNullable = true;
                colvarStationInstrumentStartDate.IsPrimaryKey = false;
                colvarStationInstrumentStartDate.IsForeignKey = false;
                colvarStationInstrumentStartDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationInstrumentStartDate);
                
                TableSchema.TableColumn colvarStationInstrumentEndDate = new TableSchema.TableColumn(schema);
                colvarStationInstrumentEndDate.ColumnName = "StationInstrumentEndDate";
                colvarStationInstrumentEndDate.DataType = DbType.DateTime;
                colvarStationInstrumentEndDate.MaxLength = 0;
                colvarStationInstrumentEndDate.AutoIncrement = false;
                colvarStationInstrumentEndDate.IsNullable = true;
                colvarStationInstrumentEndDate.IsPrimaryKey = false;
                colvarStationInstrumentEndDate.IsForeignKey = false;
                colvarStationInstrumentEndDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationInstrumentEndDate);
                
                TableSchema.TableColumn colvarStationID = new TableSchema.TableColumn(schema);
                colvarStationID.ColumnName = "StationID";
                colvarStationID.DataType = DbType.Guid;
                colvarStationID.MaxLength = 0;
                colvarStationID.AutoIncrement = false;
                colvarStationID.IsNullable = false;
                colvarStationID.IsPrimaryKey = false;
                colvarStationID.IsForeignKey = false;
                colvarStationID.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationID);
                
                TableSchema.TableColumn colvarStationCode = new TableSchema.TableColumn(schema);
                colvarStationCode.ColumnName = "StationCode";
                colvarStationCode.DataType = DbType.AnsiString;
                colvarStationCode.MaxLength = 50;
                colvarStationCode.AutoIncrement = false;
                colvarStationCode.IsNullable = false;
                colvarStationCode.IsPrimaryKey = false;
                colvarStationCode.IsForeignKey = false;
                colvarStationCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationCode);
                
                TableSchema.TableColumn colvarStationName = new TableSchema.TableColumn(schema);
                colvarStationName.ColumnName = "StationName";
                colvarStationName.DataType = DbType.AnsiString;
                colvarStationName.MaxLength = 150;
                colvarStationName.AutoIncrement = false;
                colvarStationName.IsNullable = false;
                colvarStationName.IsPrimaryKey = false;
                colvarStationName.IsForeignKey = false;
                colvarStationName.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationName);
                
                TableSchema.TableColumn colvarStationDescription = new TableSchema.TableColumn(schema);
                colvarStationDescription.ColumnName = "StationDescription";
                colvarStationDescription.DataType = DbType.AnsiString;
                colvarStationDescription.MaxLength = 5000;
                colvarStationDescription.AutoIncrement = false;
                colvarStationDescription.IsNullable = true;
                colvarStationDescription.IsPrimaryKey = false;
                colvarStationDescription.IsForeignKey = false;
                colvarStationDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationDescription);
                
                TableSchema.TableColumn colvarStationUrl = new TableSchema.TableColumn(schema);
                colvarStationUrl.ColumnName = "StationUrl";
                colvarStationUrl.DataType = DbType.AnsiString;
                colvarStationUrl.MaxLength = 250;
                colvarStationUrl.AutoIncrement = false;
                colvarStationUrl.IsNullable = true;
                colvarStationUrl.IsPrimaryKey = false;
                colvarStationUrl.IsForeignKey = false;
                colvarStationUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationUrl);
                
                TableSchema.TableColumn colvarStationStartDate = new TableSchema.TableColumn(schema);
                colvarStationStartDate.ColumnName = "StationStartDate";
                colvarStationStartDate.DataType = DbType.Date;
                colvarStationStartDate.MaxLength = 0;
                colvarStationStartDate.AutoIncrement = false;
                colvarStationStartDate.IsNullable = true;
                colvarStationStartDate.IsPrimaryKey = false;
                colvarStationStartDate.IsForeignKey = false;
                colvarStationStartDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationStartDate);
                
                TableSchema.TableColumn colvarStationEndDate = new TableSchema.TableColumn(schema);
                colvarStationEndDate.ColumnName = "StationEndDate";
                colvarStationEndDate.DataType = DbType.Date;
                colvarStationEndDate.MaxLength = 0;
                colvarStationEndDate.AutoIncrement = false;
                colvarStationEndDate.IsNullable = true;
                colvarStationEndDate.IsPrimaryKey = false;
                colvarStationEndDate.IsForeignKey = false;
                colvarStationEndDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationEndDate);
                
                TableSchema.TableColumn colvarSiteID = new TableSchema.TableColumn(schema);
                colvarSiteID.ColumnName = "SiteID";
                colvarSiteID.DataType = DbType.Guid;
                colvarSiteID.MaxLength = 0;
                colvarSiteID.AutoIncrement = false;
                colvarSiteID.IsNullable = false;
                colvarSiteID.IsPrimaryKey = false;
                colvarSiteID.IsForeignKey = false;
                colvarSiteID.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteID);
                
                TableSchema.TableColumn colvarSiteCode = new TableSchema.TableColumn(schema);
                colvarSiteCode.ColumnName = "SiteCode";
                colvarSiteCode.DataType = DbType.AnsiString;
                colvarSiteCode.MaxLength = 50;
                colvarSiteCode.AutoIncrement = false;
                colvarSiteCode.IsNullable = false;
                colvarSiteCode.IsPrimaryKey = false;
                colvarSiteCode.IsForeignKey = false;
                colvarSiteCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteCode);
                
                TableSchema.TableColumn colvarSiteName = new TableSchema.TableColumn(schema);
                colvarSiteName.ColumnName = "SiteName";
                colvarSiteName.DataType = DbType.AnsiString;
                colvarSiteName.MaxLength = 150;
                colvarSiteName.AutoIncrement = false;
                colvarSiteName.IsNullable = false;
                colvarSiteName.IsPrimaryKey = false;
                colvarSiteName.IsForeignKey = false;
                colvarSiteName.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteName);
                
                TableSchema.TableColumn colvarSiteDescription = new TableSchema.TableColumn(schema);
                colvarSiteDescription.ColumnName = "SiteDescription";
                colvarSiteDescription.DataType = DbType.AnsiString;
                colvarSiteDescription.MaxLength = 5000;
                colvarSiteDescription.AutoIncrement = false;
                colvarSiteDescription.IsNullable = true;
                colvarSiteDescription.IsPrimaryKey = false;
                colvarSiteDescription.IsForeignKey = false;
                colvarSiteDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteDescription);
                
                TableSchema.TableColumn colvarSiteUrl = new TableSchema.TableColumn(schema);
                colvarSiteUrl.ColumnName = "SiteUrl";
                colvarSiteUrl.DataType = DbType.AnsiString;
                colvarSiteUrl.MaxLength = 250;
                colvarSiteUrl.AutoIncrement = false;
                colvarSiteUrl.IsNullable = true;
                colvarSiteUrl.IsPrimaryKey = false;
                colvarSiteUrl.IsForeignKey = false;
                colvarSiteUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteUrl);
                
                TableSchema.TableColumn colvarSiteStartDate = new TableSchema.TableColumn(schema);
                colvarSiteStartDate.ColumnName = "SiteStartDate";
                colvarSiteStartDate.DataType = DbType.Date;
                colvarSiteStartDate.MaxLength = 0;
                colvarSiteStartDate.AutoIncrement = false;
                colvarSiteStartDate.IsNullable = true;
                colvarSiteStartDate.IsPrimaryKey = false;
                colvarSiteStartDate.IsForeignKey = false;
                colvarSiteStartDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteStartDate);
                
                TableSchema.TableColumn colvarSiteEndDate = new TableSchema.TableColumn(schema);
                colvarSiteEndDate.ColumnName = "SiteEndDate";
                colvarSiteEndDate.DataType = DbType.Date;
                colvarSiteEndDate.MaxLength = 0;
                colvarSiteEndDate.AutoIncrement = false;
                colvarSiteEndDate.IsNullable = true;
                colvarSiteEndDate.IsPrimaryKey = false;
                colvarSiteEndDate.IsForeignKey = false;
                colvarSiteEndDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteEndDate);
                
                TableSchema.TableColumn colvarProjectID = new TableSchema.TableColumn(schema);
                colvarProjectID.ColumnName = "ProjectID";
                colvarProjectID.DataType = DbType.Guid;
                colvarProjectID.MaxLength = 0;
                colvarProjectID.AutoIncrement = false;
                colvarProjectID.IsNullable = true;
                colvarProjectID.IsPrimaryKey = false;
                colvarProjectID.IsForeignKey = false;
                colvarProjectID.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectID);
                
                TableSchema.TableColumn colvarProjectCode = new TableSchema.TableColumn(schema);
                colvarProjectCode.ColumnName = "ProjectCode";
                colvarProjectCode.DataType = DbType.AnsiString;
                colvarProjectCode.MaxLength = 50;
                colvarProjectCode.AutoIncrement = false;
                colvarProjectCode.IsNullable = true;
                colvarProjectCode.IsPrimaryKey = false;
                colvarProjectCode.IsForeignKey = false;
                colvarProjectCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectCode);
                
                TableSchema.TableColumn colvarProjectName = new TableSchema.TableColumn(schema);
                colvarProjectName.ColumnName = "ProjectName";
                colvarProjectName.DataType = DbType.AnsiString;
                colvarProjectName.MaxLength = 150;
                colvarProjectName.AutoIncrement = false;
                colvarProjectName.IsNullable = true;
                colvarProjectName.IsPrimaryKey = false;
                colvarProjectName.IsForeignKey = false;
                colvarProjectName.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectName);
                
                TableSchema.TableColumn colvarProjectDescription = new TableSchema.TableColumn(schema);
                colvarProjectDescription.ColumnName = "ProjectDescription";
                colvarProjectDescription.DataType = DbType.AnsiString;
                colvarProjectDescription.MaxLength = 5000;
                colvarProjectDescription.AutoIncrement = false;
                colvarProjectDescription.IsNullable = true;
                colvarProjectDescription.IsPrimaryKey = false;
                colvarProjectDescription.IsForeignKey = false;
                colvarProjectDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectDescription);
                
                TableSchema.TableColumn colvarProjectUrl = new TableSchema.TableColumn(schema);
                colvarProjectUrl.ColumnName = "ProjectUrl";
                colvarProjectUrl.DataType = DbType.AnsiString;
                colvarProjectUrl.MaxLength = 250;
                colvarProjectUrl.AutoIncrement = false;
                colvarProjectUrl.IsNullable = true;
                colvarProjectUrl.IsPrimaryKey = false;
                colvarProjectUrl.IsForeignKey = false;
                colvarProjectUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectUrl);
                
                TableSchema.TableColumn colvarProgrammeID = new TableSchema.TableColumn(schema);
                colvarProgrammeID.ColumnName = "ProgrammeID";
                colvarProgrammeID.DataType = DbType.Guid;
                colvarProgrammeID.MaxLength = 0;
                colvarProgrammeID.AutoIncrement = false;
                colvarProgrammeID.IsNullable = true;
                colvarProgrammeID.IsPrimaryKey = false;
                colvarProgrammeID.IsForeignKey = false;
                colvarProgrammeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarProgrammeID);
                
                TableSchema.TableColumn colvarProgrammeCode = new TableSchema.TableColumn(schema);
                colvarProgrammeCode.ColumnName = "ProgrammeCode";
                colvarProgrammeCode.DataType = DbType.AnsiString;
                colvarProgrammeCode.MaxLength = 50;
                colvarProgrammeCode.AutoIncrement = false;
                colvarProgrammeCode.IsNullable = true;
                colvarProgrammeCode.IsPrimaryKey = false;
                colvarProgrammeCode.IsForeignKey = false;
                colvarProgrammeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarProgrammeCode);
                
                TableSchema.TableColumn colvarProgrammeName = new TableSchema.TableColumn(schema);
                colvarProgrammeName.ColumnName = "ProgrammeName";
                colvarProgrammeName.DataType = DbType.AnsiString;
                colvarProgrammeName.MaxLength = 150;
                colvarProgrammeName.AutoIncrement = false;
                colvarProgrammeName.IsNullable = true;
                colvarProgrammeName.IsPrimaryKey = false;
                colvarProgrammeName.IsForeignKey = false;
                colvarProgrammeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarProgrammeName);
                
                TableSchema.TableColumn colvarProgrammeDescription = new TableSchema.TableColumn(schema);
                colvarProgrammeDescription.ColumnName = "ProgrammeDescription";
                colvarProgrammeDescription.DataType = DbType.AnsiString;
                colvarProgrammeDescription.MaxLength = 5000;
                colvarProgrammeDescription.AutoIncrement = false;
                colvarProgrammeDescription.IsNullable = true;
                colvarProgrammeDescription.IsPrimaryKey = false;
                colvarProgrammeDescription.IsForeignKey = false;
                colvarProgrammeDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarProgrammeDescription);
                
                TableSchema.TableColumn colvarProgrammeUrl = new TableSchema.TableColumn(schema);
                colvarProgrammeUrl.ColumnName = "ProgrammeUrl";
                colvarProgrammeUrl.DataType = DbType.AnsiString;
                colvarProgrammeUrl.MaxLength = 250;
                colvarProgrammeUrl.AutoIncrement = false;
                colvarProgrammeUrl.IsNullable = true;
                colvarProgrammeUrl.IsPrimaryKey = false;
                colvarProgrammeUrl.IsForeignKey = false;
                colvarProgrammeUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarProgrammeUrl);
                
                TableSchema.TableColumn colvarOrganisationID = new TableSchema.TableColumn(schema);
                colvarOrganisationID.ColumnName = "OrganisationID";
                colvarOrganisationID.DataType = DbType.Guid;
                colvarOrganisationID.MaxLength = 0;
                colvarOrganisationID.AutoIncrement = false;
                colvarOrganisationID.IsNullable = true;
                colvarOrganisationID.IsPrimaryKey = false;
                colvarOrganisationID.IsForeignKey = false;
                colvarOrganisationID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrganisationID);
                
                TableSchema.TableColumn colvarOrganisationCode = new TableSchema.TableColumn(schema);
                colvarOrganisationCode.ColumnName = "OrganisationCode";
                colvarOrganisationCode.DataType = DbType.AnsiString;
                colvarOrganisationCode.MaxLength = 50;
                colvarOrganisationCode.AutoIncrement = false;
                colvarOrganisationCode.IsNullable = true;
                colvarOrganisationCode.IsPrimaryKey = false;
                colvarOrganisationCode.IsForeignKey = false;
                colvarOrganisationCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrganisationCode);
                
                TableSchema.TableColumn colvarOrganisationName = new TableSchema.TableColumn(schema);
                colvarOrganisationName.ColumnName = "OrganisationName";
                colvarOrganisationName.DataType = DbType.AnsiString;
                colvarOrganisationName.MaxLength = 150;
                colvarOrganisationName.AutoIncrement = false;
                colvarOrganisationName.IsNullable = true;
                colvarOrganisationName.IsPrimaryKey = false;
                colvarOrganisationName.IsForeignKey = false;
                colvarOrganisationName.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrganisationName);
                
                TableSchema.TableColumn colvarOrganisationDescription = new TableSchema.TableColumn(schema);
                colvarOrganisationDescription.ColumnName = "OrganisationDescription";
                colvarOrganisationDescription.DataType = DbType.AnsiString;
                colvarOrganisationDescription.MaxLength = 5000;
                colvarOrganisationDescription.AutoIncrement = false;
                colvarOrganisationDescription.IsNullable = true;
                colvarOrganisationDescription.IsPrimaryKey = false;
                colvarOrganisationDescription.IsForeignKey = false;
                colvarOrganisationDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrganisationDescription);
                
                TableSchema.TableColumn colvarOrganisationUrl = new TableSchema.TableColumn(schema);
                colvarOrganisationUrl.ColumnName = "OrganisationUrl";
                colvarOrganisationUrl.DataType = DbType.AnsiString;
                colvarOrganisationUrl.MaxLength = 250;
                colvarOrganisationUrl.AutoIncrement = false;
                colvarOrganisationUrl.IsNullable = true;
                colvarOrganisationUrl.IsPrimaryKey = false;
                colvarOrganisationUrl.IsForeignKey = false;
                colvarOrganisationUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrganisationUrl);
                
                TableSchema.TableColumn colvarLatitude = new TableSchema.TableColumn(schema);
                colvarLatitude.ColumnName = "Latitude";
                colvarLatitude.DataType = DbType.Double;
                colvarLatitude.MaxLength = 0;
                colvarLatitude.AutoIncrement = false;
                colvarLatitude.IsNullable = true;
                colvarLatitude.IsPrimaryKey = false;
                colvarLatitude.IsForeignKey = false;
                colvarLatitude.IsReadOnly = false;
                
                schema.Columns.Add(colvarLatitude);
                
                TableSchema.TableColumn colvarLongitude = new TableSchema.TableColumn(schema);
                colvarLongitude.ColumnName = "Longitude";
                colvarLongitude.DataType = DbType.Double;
                colvarLongitude.MaxLength = 0;
                colvarLongitude.AutoIncrement = false;
                colvarLongitude.IsNullable = true;
                colvarLongitude.IsPrimaryKey = false;
                colvarLongitude.IsForeignKey = false;
                colvarLongitude.IsReadOnly = false;
                
                schema.Columns.Add(colvarLongitude);
                
                TableSchema.TableColumn colvarElevation = new TableSchema.TableColumn(schema);
                colvarElevation.ColumnName = "Elevation";
                colvarElevation.DataType = DbType.Double;
                colvarElevation.MaxLength = 0;
                colvarElevation.AutoIncrement = false;
                colvarElevation.IsNullable = true;
                colvarElevation.IsPrimaryKey = false;
                colvarElevation.IsForeignKey = false;
                colvarElevation.IsReadOnly = false;
                
                schema.Columns.Add(colvarElevation);
                
                TableSchema.TableColumn colvarStartDate = new TableSchema.TableColumn(schema);
                colvarStartDate.ColumnName = "StartDate";
                colvarStartDate.DataType = DbType.DateTime;
                colvarStartDate.MaxLength = 0;
                colvarStartDate.AutoIncrement = false;
                colvarStartDate.IsNullable = true;
                colvarStartDate.IsPrimaryKey = false;
                colvarStartDate.IsForeignKey = false;
                colvarStartDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarStartDate);
                
                TableSchema.TableColumn colvarEndDate = new TableSchema.TableColumn(schema);
                colvarEndDate.ColumnName = "EndDate";
                colvarEndDate.DataType = DbType.DateTime;
                colvarEndDate.MaxLength = 0;
                colvarEndDate.AutoIncrement = false;
                colvarEndDate.IsNullable = true;
                colvarEndDate.IsPrimaryKey = false;
                colvarEndDate.IsForeignKey = false;
                colvarEndDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarEndDate);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ObservationsDB"].AddSchema("vSensorExpansion",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VSensorExpansion()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VSensorExpansion(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VSensorExpansion(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VSensorExpansion(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("SensorID")]
        [Bindable(true)]
        public Guid SensorID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("SensorID");
		    }
            set 
		    {
			    SetColumnValue("SensorID", value);
            }
        }
	      
        [XmlAttribute("SensorCode")]
        [Bindable(true)]
        public string SensorCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("SensorCode");
		    }
            set 
		    {
			    SetColumnValue("SensorCode", value);
            }
        }
	      
        [XmlAttribute("SensorName")]
        [Bindable(true)]
        public string SensorName 
	    {
		    get
		    {
			    return GetColumnValue<string>("SensorName");
		    }
            set 
		    {
			    SetColumnValue("SensorName", value);
            }
        }
	      
        [XmlAttribute("SensorDescription")]
        [Bindable(true)]
        public string SensorDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("SensorDescription");
		    }
            set 
		    {
			    SetColumnValue("SensorDescription", value);
            }
        }
	      
        [XmlAttribute("SensorUrl")]
        [Bindable(true)]
        public string SensorUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("SensorUrl");
		    }
            set 
		    {
			    SetColumnValue("SensorUrl", value);
            }
        }
	      
        [XmlAttribute("InstrumenSensorStartDate")]
        [Bindable(true)]
        public DateTime? InstrumenSensorStartDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("InstrumenSensorStartDate");
		    }
            set 
		    {
			    SetColumnValue("InstrumenSensorStartDate", value);
            }
        }
	      
        [XmlAttribute("InstrumenSensorEndDate")]
        [Bindable(true)]
        public DateTime? InstrumenSensorEndDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("InstrumenSensorEndDate");
		    }
            set 
		    {
			    SetColumnValue("InstrumenSensorEndDate", value);
            }
        }
	      
        [XmlAttribute("InstrumentID")]
        [Bindable(true)]
        public Guid InstrumentID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("InstrumentID");
		    }
            set 
		    {
			    SetColumnValue("InstrumentID", value);
            }
        }
	      
        [XmlAttribute("InstrumentCode")]
        [Bindable(true)]
        public string InstrumentCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("InstrumentCode");
		    }
            set 
		    {
			    SetColumnValue("InstrumentCode", value);
            }
        }
	      
        [XmlAttribute("InstrumentName")]
        [Bindable(true)]
        public string InstrumentName 
	    {
		    get
		    {
			    return GetColumnValue<string>("InstrumentName");
		    }
            set 
		    {
			    SetColumnValue("InstrumentName", value);
            }
        }
	      
        [XmlAttribute("InstrumentDescription")]
        [Bindable(true)]
        public string InstrumentDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("InstrumentDescription");
		    }
            set 
		    {
			    SetColumnValue("InstrumentDescription", value);
            }
        }
	      
        [XmlAttribute("InstrumentUrl")]
        [Bindable(true)]
        public string InstrumentUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("InstrumentUrl");
		    }
            set 
		    {
			    SetColumnValue("InstrumentUrl", value);
            }
        }
	      
        [XmlAttribute("InstrumentStartDate")]
        [Bindable(true)]
        public DateTime? InstrumentStartDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("InstrumentStartDate");
		    }
            set 
		    {
			    SetColumnValue("InstrumentStartDate", value);
            }
        }
	      
        [XmlAttribute("InstrumentEndDate")]
        [Bindable(true)]
        public DateTime? InstrumentEndDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("InstrumentEndDate");
		    }
            set 
		    {
			    SetColumnValue("InstrumentEndDate", value);
            }
        }
	      
        [XmlAttribute("StationInstrumentStartDate")]
        [Bindable(true)]
        public DateTime? StationInstrumentStartDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("StationInstrumentStartDate");
		    }
            set 
		    {
			    SetColumnValue("StationInstrumentStartDate", value);
            }
        }
	      
        [XmlAttribute("StationInstrumentEndDate")]
        [Bindable(true)]
        public DateTime? StationInstrumentEndDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("StationInstrumentEndDate");
		    }
            set 
		    {
			    SetColumnValue("StationInstrumentEndDate", value);
            }
        }
	      
        [XmlAttribute("StationID")]
        [Bindable(true)]
        public Guid StationID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("StationID");
		    }
            set 
		    {
			    SetColumnValue("StationID", value);
            }
        }
	      
        [XmlAttribute("StationCode")]
        [Bindable(true)]
        public string StationCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("StationCode");
		    }
            set 
		    {
			    SetColumnValue("StationCode", value);
            }
        }
	      
        [XmlAttribute("StationName")]
        [Bindable(true)]
        public string StationName 
	    {
		    get
		    {
			    return GetColumnValue<string>("StationName");
		    }
            set 
		    {
			    SetColumnValue("StationName", value);
            }
        }
	      
        [XmlAttribute("StationDescription")]
        [Bindable(true)]
        public string StationDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("StationDescription");
		    }
            set 
		    {
			    SetColumnValue("StationDescription", value);
            }
        }
	      
        [XmlAttribute("StationUrl")]
        [Bindable(true)]
        public string StationUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("StationUrl");
		    }
            set 
		    {
			    SetColumnValue("StationUrl", value);
            }
        }
	      
        [XmlAttribute("StationStartDate")]
        [Bindable(true)]
        public DateTime? StationStartDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("StationStartDate");
		    }
            set 
		    {
			    SetColumnValue("StationStartDate", value);
            }
        }
	      
        [XmlAttribute("StationEndDate")]
        [Bindable(true)]
        public DateTime? StationEndDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("StationEndDate");
		    }
            set 
		    {
			    SetColumnValue("StationEndDate", value);
            }
        }
	      
        [XmlAttribute("SiteID")]
        [Bindable(true)]
        public Guid SiteID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("SiteID");
		    }
            set 
		    {
			    SetColumnValue("SiteID", value);
            }
        }
	      
        [XmlAttribute("SiteCode")]
        [Bindable(true)]
        public string SiteCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("SiteCode");
		    }
            set 
		    {
			    SetColumnValue("SiteCode", value);
            }
        }
	      
        [XmlAttribute("SiteName")]
        [Bindable(true)]
        public string SiteName 
	    {
		    get
		    {
			    return GetColumnValue<string>("SiteName");
		    }
            set 
		    {
			    SetColumnValue("SiteName", value);
            }
        }
	      
        [XmlAttribute("SiteDescription")]
        [Bindable(true)]
        public string SiteDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("SiteDescription");
		    }
            set 
		    {
			    SetColumnValue("SiteDescription", value);
            }
        }
	      
        [XmlAttribute("SiteUrl")]
        [Bindable(true)]
        public string SiteUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("SiteUrl");
		    }
            set 
		    {
			    SetColumnValue("SiteUrl", value);
            }
        }
	      
        [XmlAttribute("SiteStartDate")]
        [Bindable(true)]
        public DateTime? SiteStartDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SiteStartDate");
		    }
            set 
		    {
			    SetColumnValue("SiteStartDate", value);
            }
        }
	      
        [XmlAttribute("SiteEndDate")]
        [Bindable(true)]
        public DateTime? SiteEndDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SiteEndDate");
		    }
            set 
		    {
			    SetColumnValue("SiteEndDate", value);
            }
        }
	      
        [XmlAttribute("ProjectID")]
        [Bindable(true)]
        public Guid? ProjectID 
	    {
		    get
		    {
			    return GetColumnValue<Guid?>("ProjectID");
		    }
            set 
		    {
			    SetColumnValue("ProjectID", value);
            }
        }
	      
        [XmlAttribute("ProjectCode")]
        [Bindable(true)]
        public string ProjectCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectCode");
		    }
            set 
		    {
			    SetColumnValue("ProjectCode", value);
            }
        }
	      
        [XmlAttribute("ProjectName")]
        [Bindable(true)]
        public string ProjectName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectName");
		    }
            set 
		    {
			    SetColumnValue("ProjectName", value);
            }
        }
	      
        [XmlAttribute("ProjectDescription")]
        [Bindable(true)]
        public string ProjectDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectDescription");
		    }
            set 
		    {
			    SetColumnValue("ProjectDescription", value);
            }
        }
	      
        [XmlAttribute("ProjectUrl")]
        [Bindable(true)]
        public string ProjectUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectUrl");
		    }
            set 
		    {
			    SetColumnValue("ProjectUrl", value);
            }
        }
	      
        [XmlAttribute("ProgrammeID")]
        [Bindable(true)]
        public Guid? ProgrammeID 
	    {
		    get
		    {
			    return GetColumnValue<Guid?>("ProgrammeID");
		    }
            set 
		    {
			    SetColumnValue("ProgrammeID", value);
            }
        }
	      
        [XmlAttribute("ProgrammeCode")]
        [Bindable(true)]
        public string ProgrammeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProgrammeCode");
		    }
            set 
		    {
			    SetColumnValue("ProgrammeCode", value);
            }
        }
	      
        [XmlAttribute("ProgrammeName")]
        [Bindable(true)]
        public string ProgrammeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProgrammeName");
		    }
            set 
		    {
			    SetColumnValue("ProgrammeName", value);
            }
        }
	      
        [XmlAttribute("ProgrammeDescription")]
        [Bindable(true)]
        public string ProgrammeDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProgrammeDescription");
		    }
            set 
		    {
			    SetColumnValue("ProgrammeDescription", value);
            }
        }
	      
        [XmlAttribute("ProgrammeUrl")]
        [Bindable(true)]
        public string ProgrammeUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProgrammeUrl");
		    }
            set 
		    {
			    SetColumnValue("ProgrammeUrl", value);
            }
        }
	      
        [XmlAttribute("OrganisationID")]
        [Bindable(true)]
        public Guid? OrganisationID 
	    {
		    get
		    {
			    return GetColumnValue<Guid?>("OrganisationID");
		    }
            set 
		    {
			    SetColumnValue("OrganisationID", value);
            }
        }
	      
        [XmlAttribute("OrganisationCode")]
        [Bindable(true)]
        public string OrganisationCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrganisationCode");
		    }
            set 
		    {
			    SetColumnValue("OrganisationCode", value);
            }
        }
	      
        [XmlAttribute("OrganisationName")]
        [Bindable(true)]
        public string OrganisationName 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrganisationName");
		    }
            set 
		    {
			    SetColumnValue("OrganisationName", value);
            }
        }
	      
        [XmlAttribute("OrganisationDescription")]
        [Bindable(true)]
        public string OrganisationDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrganisationDescription");
		    }
            set 
		    {
			    SetColumnValue("OrganisationDescription", value);
            }
        }
	      
        [XmlAttribute("OrganisationUrl")]
        [Bindable(true)]
        public string OrganisationUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrganisationUrl");
		    }
            set 
		    {
			    SetColumnValue("OrganisationUrl", value);
            }
        }
	      
        [XmlAttribute("Latitude")]
        [Bindable(true)]
        public double? Latitude 
	    {
		    get
		    {
			    return GetColumnValue<double?>("Latitude");
		    }
            set 
		    {
			    SetColumnValue("Latitude", value);
            }
        }
	      
        [XmlAttribute("Longitude")]
        [Bindable(true)]
        public double? Longitude 
	    {
		    get
		    {
			    return GetColumnValue<double?>("Longitude");
		    }
            set 
		    {
			    SetColumnValue("Longitude", value);
            }
        }
	      
        [XmlAttribute("Elevation")]
        [Bindable(true)]
        public double? Elevation 
	    {
		    get
		    {
			    return GetColumnValue<double?>("Elevation");
		    }
            set 
		    {
			    SetColumnValue("Elevation", value);
            }
        }
	      
        [XmlAttribute("StartDate")]
        [Bindable(true)]
        public DateTime? StartDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("StartDate");
		    }
            set 
		    {
			    SetColumnValue("StartDate", value);
            }
        }
	      
        [XmlAttribute("EndDate")]
        [Bindable(true)]
        public DateTime? EndDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EndDate");
		    }
            set 
		    {
			    SetColumnValue("EndDate", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string SensorID = @"SensorID";
            
            public static string SensorCode = @"SensorCode";
            
            public static string SensorName = @"SensorName";
            
            public static string SensorDescription = @"SensorDescription";
            
            public static string SensorUrl = @"SensorUrl";
            
            public static string InstrumenSensorStartDate = @"InstrumenSensorStartDate";
            
            public static string InstrumenSensorEndDate = @"InstrumenSensorEndDate";
            
            public static string InstrumentID = @"InstrumentID";
            
            public static string InstrumentCode = @"InstrumentCode";
            
            public static string InstrumentName = @"InstrumentName";
            
            public static string InstrumentDescription = @"InstrumentDescription";
            
            public static string InstrumentUrl = @"InstrumentUrl";
            
            public static string InstrumentStartDate = @"InstrumentStartDate";
            
            public static string InstrumentEndDate = @"InstrumentEndDate";
            
            public static string StationInstrumentStartDate = @"StationInstrumentStartDate";
            
            public static string StationInstrumentEndDate = @"StationInstrumentEndDate";
            
            public static string StationID = @"StationID";
            
            public static string StationCode = @"StationCode";
            
            public static string StationName = @"StationName";
            
            public static string StationDescription = @"StationDescription";
            
            public static string StationUrl = @"StationUrl";
            
            public static string StationStartDate = @"StationStartDate";
            
            public static string StationEndDate = @"StationEndDate";
            
            public static string SiteID = @"SiteID";
            
            public static string SiteCode = @"SiteCode";
            
            public static string SiteName = @"SiteName";
            
            public static string SiteDescription = @"SiteDescription";
            
            public static string SiteUrl = @"SiteUrl";
            
            public static string SiteStartDate = @"SiteStartDate";
            
            public static string SiteEndDate = @"SiteEndDate";
            
            public static string ProjectID = @"ProjectID";
            
            public static string ProjectCode = @"ProjectCode";
            
            public static string ProjectName = @"ProjectName";
            
            public static string ProjectDescription = @"ProjectDescription";
            
            public static string ProjectUrl = @"ProjectUrl";
            
            public static string ProgrammeID = @"ProgrammeID";
            
            public static string ProgrammeCode = @"ProgrammeCode";
            
            public static string ProgrammeName = @"ProgrammeName";
            
            public static string ProgrammeDescription = @"ProgrammeDescription";
            
            public static string ProgrammeUrl = @"ProgrammeUrl";
            
            public static string OrganisationID = @"OrganisationID";
            
            public static string OrganisationCode = @"OrganisationCode";
            
            public static string OrganisationName = @"OrganisationName";
            
            public static string OrganisationDescription = @"OrganisationDescription";
            
            public static string OrganisationUrl = @"OrganisationUrl";
            
            public static string Latitude = @"Latitude";
            
            public static string Longitude = @"Longitude";
            
            public static string Elevation = @"Elevation";
            
            public static string StartDate = @"StartDate";
            
            public static string EndDate = @"EndDate";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
