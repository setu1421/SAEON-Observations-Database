using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SAEON.Observations.Data{
    /// <summary>
    /// Strongly-typed collection for the VDatasetsExpansion class.
    /// </summary>
    [Serializable]
    public partial class VDatasetsExpansionCollection : ReadOnlyList<VDatasetsExpansion, VDatasetsExpansionCollection>
    {        
        public VDatasetsExpansionCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the vDatasetsExpansion view.
    /// </summary>
    [Serializable]
    public partial class VDatasetsExpansion : ReadOnlyRecord<VDatasetsExpansion>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("vDatasetsExpansion", TableType.View, DataService.GetInstance("ObservationsDB"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
                colvarId.ColumnName = "ID";
                colvarId.DataType = DbType.Guid;
                colvarId.MaxLength = 0;
                colvarId.AutoIncrement = false;
                colvarId.IsNullable = false;
                colvarId.IsPrimaryKey = false;
                colvarId.IsForeignKey = false;
                colvarId.IsReadOnly = false;
                
                schema.Columns.Add(colvarId);
                
                TableSchema.TableColumn colvarCode = new TableSchema.TableColumn(schema);
                colvarCode.ColumnName = "Code";
                colvarCode.DataType = DbType.AnsiString;
                colvarCode.MaxLength = 200;
                colvarCode.AutoIncrement = false;
                colvarCode.IsNullable = false;
                colvarCode.IsPrimaryKey = false;
                colvarCode.IsForeignKey = false;
                colvarCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarCode);
                
                TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);
                colvarName.ColumnName = "Name";
                colvarName.DataType = DbType.AnsiString;
                colvarName.MaxLength = 500;
                colvarName.AutoIncrement = false;
                colvarName.IsNullable = false;
                colvarName.IsPrimaryKey = false;
                colvarName.IsForeignKey = false;
                colvarName.IsReadOnly = false;
                
                schema.Columns.Add(colvarName);
                
                TableSchema.TableColumn colvarDescription = new TableSchema.TableColumn(schema);
                colvarDescription.ColumnName = "Description";
                colvarDescription.DataType = DbType.AnsiString;
                colvarDescription.MaxLength = 5000;
                colvarDescription.AutoIncrement = false;
                colvarDescription.IsNullable = true;
                colvarDescription.IsPrimaryKey = false;
                colvarDescription.IsForeignKey = false;
                colvarDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarDescription);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.AnsiString;
                colvarTitle.MaxLength = 5000;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarStationID = new TableSchema.TableColumn(schema);
                colvarStationID.ColumnName = "StationID";
                colvarStationID.DataType = DbType.Guid;
                colvarStationID.MaxLength = 0;
                colvarStationID.AutoIncrement = false;
                colvarStationID.IsNullable = false;
                colvarStationID.IsPrimaryKey = false;
                colvarStationID.IsForeignKey = false;
                colvarStationID.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationID);
                
                TableSchema.TableColumn colvarPhenomenonOfferingID = new TableSchema.TableColumn(schema);
                colvarPhenomenonOfferingID.ColumnName = "PhenomenonOfferingID";
                colvarPhenomenonOfferingID.DataType = DbType.Guid;
                colvarPhenomenonOfferingID.MaxLength = 0;
                colvarPhenomenonOfferingID.AutoIncrement = false;
                colvarPhenomenonOfferingID.IsNullable = false;
                colvarPhenomenonOfferingID.IsPrimaryKey = false;
                colvarPhenomenonOfferingID.IsForeignKey = false;
                colvarPhenomenonOfferingID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhenomenonOfferingID);
                
                TableSchema.TableColumn colvarPhenomenonUOMID = new TableSchema.TableColumn(schema);
                colvarPhenomenonUOMID.ColumnName = "PhenomenonUOMID";
                colvarPhenomenonUOMID.DataType = DbType.Guid;
                colvarPhenomenonUOMID.MaxLength = 0;
                colvarPhenomenonUOMID.AutoIncrement = false;
                colvarPhenomenonUOMID.IsNullable = false;
                colvarPhenomenonUOMID.IsPrimaryKey = false;
                colvarPhenomenonUOMID.IsForeignKey = false;
                colvarPhenomenonUOMID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhenomenonUOMID);
                
                TableSchema.TableColumn colvarDigitalObjectIdentifierID = new TableSchema.TableColumn(schema);
                colvarDigitalObjectIdentifierID.ColumnName = "DigitalObjectIdentifierID";
                colvarDigitalObjectIdentifierID.DataType = DbType.Int32;
                colvarDigitalObjectIdentifierID.MaxLength = 0;
                colvarDigitalObjectIdentifierID.AutoIncrement = false;
                colvarDigitalObjectIdentifierID.IsNullable = true;
                colvarDigitalObjectIdentifierID.IsPrimaryKey = false;
                colvarDigitalObjectIdentifierID.IsForeignKey = false;
                colvarDigitalObjectIdentifierID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDigitalObjectIdentifierID);
                
                TableSchema.TableColumn colvarCount = new TableSchema.TableColumn(schema);
                colvarCount.ColumnName = "Count";
                colvarCount.DataType = DbType.Int32;
                colvarCount.MaxLength = 0;
                colvarCount.AutoIncrement = false;
                colvarCount.IsNullable = true;
                colvarCount.IsPrimaryKey = false;
                colvarCount.IsForeignKey = false;
                colvarCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarCount);
                
                TableSchema.TableColumn colvarValueCount = new TableSchema.TableColumn(schema);
                colvarValueCount.ColumnName = "ValueCount";
                colvarValueCount.DataType = DbType.Int32;
                colvarValueCount.MaxLength = 0;
                colvarValueCount.AutoIncrement = false;
                colvarValueCount.IsNullable = true;
                colvarValueCount.IsPrimaryKey = false;
                colvarValueCount.IsForeignKey = false;
                colvarValueCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarValueCount);
                
                TableSchema.TableColumn colvarNullCount = new TableSchema.TableColumn(schema);
                colvarNullCount.ColumnName = "NullCount";
                colvarNullCount.DataType = DbType.Int32;
                colvarNullCount.MaxLength = 0;
                colvarNullCount.AutoIncrement = false;
                colvarNullCount.IsNullable = true;
                colvarNullCount.IsPrimaryKey = false;
                colvarNullCount.IsForeignKey = false;
                colvarNullCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarNullCount);
                
                TableSchema.TableColumn colvarVerifiedCount = new TableSchema.TableColumn(schema);
                colvarVerifiedCount.ColumnName = "VerifiedCount";
                colvarVerifiedCount.DataType = DbType.Int32;
                colvarVerifiedCount.MaxLength = 0;
                colvarVerifiedCount.AutoIncrement = false;
                colvarVerifiedCount.IsNullable = true;
                colvarVerifiedCount.IsPrimaryKey = false;
                colvarVerifiedCount.IsForeignKey = false;
                colvarVerifiedCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarVerifiedCount);
                
                TableSchema.TableColumn colvarUnverifiedCount = new TableSchema.TableColumn(schema);
                colvarUnverifiedCount.ColumnName = "UnverifiedCount";
                colvarUnverifiedCount.DataType = DbType.Int32;
                colvarUnverifiedCount.MaxLength = 0;
                colvarUnverifiedCount.AutoIncrement = false;
                colvarUnverifiedCount.IsNullable = true;
                colvarUnverifiedCount.IsPrimaryKey = false;
                colvarUnverifiedCount.IsForeignKey = false;
                colvarUnverifiedCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnverifiedCount);
                
                TableSchema.TableColumn colvarStartDate = new TableSchema.TableColumn(schema);
                colvarStartDate.ColumnName = "StartDate";
                colvarStartDate.DataType = DbType.DateTime;
                colvarStartDate.MaxLength = 0;
                colvarStartDate.AutoIncrement = false;
                colvarStartDate.IsNullable = true;
                colvarStartDate.IsPrimaryKey = false;
                colvarStartDate.IsForeignKey = false;
                colvarStartDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarStartDate);
                
                TableSchema.TableColumn colvarEndDate = new TableSchema.TableColumn(schema);
                colvarEndDate.ColumnName = "EndDate";
                colvarEndDate.DataType = DbType.DateTime;
                colvarEndDate.MaxLength = 0;
                colvarEndDate.AutoIncrement = false;
                colvarEndDate.IsNullable = true;
                colvarEndDate.IsPrimaryKey = false;
                colvarEndDate.IsForeignKey = false;
                colvarEndDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarEndDate);
                
                TableSchema.TableColumn colvarLatitudeNorth = new TableSchema.TableColumn(schema);
                colvarLatitudeNorth.ColumnName = "LatitudeNorth";
                colvarLatitudeNorth.DataType = DbType.Double;
                colvarLatitudeNorth.MaxLength = 0;
                colvarLatitudeNorth.AutoIncrement = false;
                colvarLatitudeNorth.IsNullable = true;
                colvarLatitudeNorth.IsPrimaryKey = false;
                colvarLatitudeNorth.IsForeignKey = false;
                colvarLatitudeNorth.IsReadOnly = false;
                
                schema.Columns.Add(colvarLatitudeNorth);
                
                TableSchema.TableColumn colvarLatitudeSouth = new TableSchema.TableColumn(schema);
                colvarLatitudeSouth.ColumnName = "LatitudeSouth";
                colvarLatitudeSouth.DataType = DbType.Double;
                colvarLatitudeSouth.MaxLength = 0;
                colvarLatitudeSouth.AutoIncrement = false;
                colvarLatitudeSouth.IsNullable = true;
                colvarLatitudeSouth.IsPrimaryKey = false;
                colvarLatitudeSouth.IsForeignKey = false;
                colvarLatitudeSouth.IsReadOnly = false;
                
                schema.Columns.Add(colvarLatitudeSouth);
                
                TableSchema.TableColumn colvarLongitudeWest = new TableSchema.TableColumn(schema);
                colvarLongitudeWest.ColumnName = "LongitudeWest";
                colvarLongitudeWest.DataType = DbType.Double;
                colvarLongitudeWest.MaxLength = 0;
                colvarLongitudeWest.AutoIncrement = false;
                colvarLongitudeWest.IsNullable = true;
                colvarLongitudeWest.IsPrimaryKey = false;
                colvarLongitudeWest.IsForeignKey = false;
                colvarLongitudeWest.IsReadOnly = false;
                
                schema.Columns.Add(colvarLongitudeWest);
                
                TableSchema.TableColumn colvarLongitudeEast = new TableSchema.TableColumn(schema);
                colvarLongitudeEast.ColumnName = "LongitudeEast";
                colvarLongitudeEast.DataType = DbType.Double;
                colvarLongitudeEast.MaxLength = 0;
                colvarLongitudeEast.AutoIncrement = false;
                colvarLongitudeEast.IsNullable = true;
                colvarLongitudeEast.IsPrimaryKey = false;
                colvarLongitudeEast.IsForeignKey = false;
                colvarLongitudeEast.IsReadOnly = false;
                
                schema.Columns.Add(colvarLongitudeEast);
                
                TableSchema.TableColumn colvarElevationMinimum = new TableSchema.TableColumn(schema);
                colvarElevationMinimum.ColumnName = "ElevationMinimum";
                colvarElevationMinimum.DataType = DbType.Double;
                colvarElevationMinimum.MaxLength = 0;
                colvarElevationMinimum.AutoIncrement = false;
                colvarElevationMinimum.IsNullable = true;
                colvarElevationMinimum.IsPrimaryKey = false;
                colvarElevationMinimum.IsForeignKey = false;
                colvarElevationMinimum.IsReadOnly = false;
                
                schema.Columns.Add(colvarElevationMinimum);
                
                TableSchema.TableColumn colvarElevationMaximum = new TableSchema.TableColumn(schema);
                colvarElevationMaximum.ColumnName = "ElevationMaximum";
                colvarElevationMaximum.DataType = DbType.Double;
                colvarElevationMaximum.MaxLength = 0;
                colvarElevationMaximum.AutoIncrement = false;
                colvarElevationMaximum.IsNullable = true;
                colvarElevationMaximum.IsPrimaryKey = false;
                colvarElevationMaximum.IsForeignKey = false;
                colvarElevationMaximum.IsReadOnly = false;
                
                schema.Columns.Add(colvarElevationMaximum);
                
                TableSchema.TableColumn colvarHashCode = new TableSchema.TableColumn(schema);
                colvarHashCode.ColumnName = "HashCode";
                colvarHashCode.DataType = DbType.Int32;
                colvarHashCode.MaxLength = 0;
                colvarHashCode.AutoIncrement = false;
                colvarHashCode.IsNullable = false;
                colvarHashCode.IsPrimaryKey = false;
                colvarHashCode.IsForeignKey = false;
                colvarHashCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarHashCode);
                
                TableSchema.TableColumn colvarNeedsUpdate = new TableSchema.TableColumn(schema);
                colvarNeedsUpdate.ColumnName = "NeedsUpdate";
                colvarNeedsUpdate.DataType = DbType.Boolean;
                colvarNeedsUpdate.MaxLength = 0;
                colvarNeedsUpdate.AutoIncrement = false;
                colvarNeedsUpdate.IsNullable = true;
                colvarNeedsUpdate.IsPrimaryKey = false;
                colvarNeedsUpdate.IsForeignKey = false;
                colvarNeedsUpdate.IsReadOnly = false;
                
                schema.Columns.Add(colvarNeedsUpdate);
                
                TableSchema.TableColumn colvarAddedAt = new TableSchema.TableColumn(schema);
                colvarAddedAt.ColumnName = "AddedAt";
                colvarAddedAt.DataType = DbType.DateTime;
                colvarAddedAt.MaxLength = 0;
                colvarAddedAt.AutoIncrement = false;
                colvarAddedAt.IsNullable = true;
                colvarAddedAt.IsPrimaryKey = false;
                colvarAddedAt.IsForeignKey = false;
                colvarAddedAt.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddedAt);
                
                TableSchema.TableColumn colvarAddedBy = new TableSchema.TableColumn(schema);
                colvarAddedBy.ColumnName = "AddedBy";
                colvarAddedBy.DataType = DbType.AnsiString;
                colvarAddedBy.MaxLength = 36;
                colvarAddedBy.AutoIncrement = false;
                colvarAddedBy.IsNullable = false;
                colvarAddedBy.IsPrimaryKey = false;
                colvarAddedBy.IsForeignKey = false;
                colvarAddedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddedBy);
                
                TableSchema.TableColumn colvarUpdatedAt = new TableSchema.TableColumn(schema);
                colvarUpdatedAt.ColumnName = "UpdatedAt";
                colvarUpdatedAt.DataType = DbType.DateTime;
                colvarUpdatedAt.MaxLength = 0;
                colvarUpdatedAt.AutoIncrement = false;
                colvarUpdatedAt.IsNullable = true;
                colvarUpdatedAt.IsPrimaryKey = false;
                colvarUpdatedAt.IsForeignKey = false;
                colvarUpdatedAt.IsReadOnly = false;
                
                schema.Columns.Add(colvarUpdatedAt);
                
                TableSchema.TableColumn colvarUpdatedBy = new TableSchema.TableColumn(schema);
                colvarUpdatedBy.ColumnName = "UpdatedBy";
                colvarUpdatedBy.DataType = DbType.AnsiString;
                colvarUpdatedBy.MaxLength = 36;
                colvarUpdatedBy.AutoIncrement = false;
                colvarUpdatedBy.IsNullable = false;
                colvarUpdatedBy.IsPrimaryKey = false;
                colvarUpdatedBy.IsForeignKey = false;
                colvarUpdatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarUpdatedBy);
                
                TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
                colvarUserId.ColumnName = "UserId";
                colvarUserId.DataType = DbType.Guid;
                colvarUserId.MaxLength = 0;
                colvarUserId.AutoIncrement = false;
                colvarUserId.IsNullable = false;
                colvarUserId.IsPrimaryKey = false;
                colvarUserId.IsForeignKey = false;
                colvarUserId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserId);
                
                TableSchema.TableColumn colvarRowVersion = new TableSchema.TableColumn(schema);
                colvarRowVersion.ColumnName = "RowVersion";
                colvarRowVersion.DataType = DbType.Binary;
                colvarRowVersion.MaxLength = 0;
                colvarRowVersion.AutoIncrement = false;
                colvarRowVersion.IsNullable = false;
                colvarRowVersion.IsPrimaryKey = false;
                colvarRowVersion.IsForeignKey = false;
                colvarRowVersion.IsReadOnly = true;
                
                schema.Columns.Add(colvarRowVersion);
                
                TableSchema.TableColumn colvarCSVFileName = new TableSchema.TableColumn(schema);
                colvarCSVFileName.ColumnName = "CSVFileName";
                colvarCSVFileName.DataType = DbType.AnsiString;
                colvarCSVFileName.MaxLength = 500;
                colvarCSVFileName.AutoIncrement = false;
                colvarCSVFileName.IsNullable = true;
                colvarCSVFileName.IsPrimaryKey = false;
                colvarCSVFileName.IsForeignKey = false;
                colvarCSVFileName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCSVFileName);
                
                TableSchema.TableColumn colvarExcelFileName = new TableSchema.TableColumn(schema);
                colvarExcelFileName.ColumnName = "ExcelFileName";
                colvarExcelFileName.DataType = DbType.AnsiString;
                colvarExcelFileName.MaxLength = 500;
                colvarExcelFileName.AutoIncrement = false;
                colvarExcelFileName.IsNullable = true;
                colvarExcelFileName.IsPrimaryKey = false;
                colvarExcelFileName.IsForeignKey = false;
                colvarExcelFileName.IsReadOnly = false;
                
                schema.Columns.Add(colvarExcelFileName);
                
                TableSchema.TableColumn colvarNetCDFFileName = new TableSchema.TableColumn(schema);
                colvarNetCDFFileName.ColumnName = "NetCDFFileName";
                colvarNetCDFFileName.DataType = DbType.AnsiString;
                colvarNetCDFFileName.MaxLength = 500;
                colvarNetCDFFileName.AutoIncrement = false;
                colvarNetCDFFileName.IsNullable = true;
                colvarNetCDFFileName.IsPrimaryKey = false;
                colvarNetCDFFileName.IsForeignKey = false;
                colvarNetCDFFileName.IsReadOnly = false;
                
                schema.Columns.Add(colvarNetCDFFileName);
                
                TableSchema.TableColumn colvarOrganisationID = new TableSchema.TableColumn(schema);
                colvarOrganisationID.ColumnName = "OrganisationID";
                colvarOrganisationID.DataType = DbType.Guid;
                colvarOrganisationID.MaxLength = 0;
                colvarOrganisationID.AutoIncrement = false;
                colvarOrganisationID.IsNullable = true;
                colvarOrganisationID.IsPrimaryKey = false;
                colvarOrganisationID.IsForeignKey = false;
                colvarOrganisationID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrganisationID);
                
                TableSchema.TableColumn colvarOrganisationCode = new TableSchema.TableColumn(schema);
                colvarOrganisationCode.ColumnName = "OrganisationCode";
                colvarOrganisationCode.DataType = DbType.AnsiString;
                colvarOrganisationCode.MaxLength = 50;
                colvarOrganisationCode.AutoIncrement = false;
                colvarOrganisationCode.IsNullable = true;
                colvarOrganisationCode.IsPrimaryKey = false;
                colvarOrganisationCode.IsForeignKey = false;
                colvarOrganisationCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrganisationCode);
                
                TableSchema.TableColumn colvarOrganisationName = new TableSchema.TableColumn(schema);
                colvarOrganisationName.ColumnName = "OrganisationName";
                colvarOrganisationName.DataType = DbType.AnsiString;
                colvarOrganisationName.MaxLength = 150;
                colvarOrganisationName.AutoIncrement = false;
                colvarOrganisationName.IsNullable = true;
                colvarOrganisationName.IsPrimaryKey = false;
                colvarOrganisationName.IsForeignKey = false;
                colvarOrganisationName.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrganisationName);
                
                TableSchema.TableColumn colvarOrganisationDescription = new TableSchema.TableColumn(schema);
                colvarOrganisationDescription.ColumnName = "OrganisationDescription";
                colvarOrganisationDescription.DataType = DbType.AnsiString;
                colvarOrganisationDescription.MaxLength = 5000;
                colvarOrganisationDescription.AutoIncrement = false;
                colvarOrganisationDescription.IsNullable = true;
                colvarOrganisationDescription.IsPrimaryKey = false;
                colvarOrganisationDescription.IsForeignKey = false;
                colvarOrganisationDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrganisationDescription);
                
                TableSchema.TableColumn colvarOrganisationUrl = new TableSchema.TableColumn(schema);
                colvarOrganisationUrl.ColumnName = "OrganisationUrl";
                colvarOrganisationUrl.DataType = DbType.AnsiString;
                colvarOrganisationUrl.MaxLength = 250;
                colvarOrganisationUrl.AutoIncrement = false;
                colvarOrganisationUrl.IsNullable = true;
                colvarOrganisationUrl.IsPrimaryKey = false;
                colvarOrganisationUrl.IsForeignKey = false;
                colvarOrganisationUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrganisationUrl);
                
                TableSchema.TableColumn colvarProgrammeID = new TableSchema.TableColumn(schema);
                colvarProgrammeID.ColumnName = "ProgrammeID";
                colvarProgrammeID.DataType = DbType.Guid;
                colvarProgrammeID.MaxLength = 0;
                colvarProgrammeID.AutoIncrement = false;
                colvarProgrammeID.IsNullable = true;
                colvarProgrammeID.IsPrimaryKey = false;
                colvarProgrammeID.IsForeignKey = false;
                colvarProgrammeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarProgrammeID);
                
                TableSchema.TableColumn colvarProgrammeCode = new TableSchema.TableColumn(schema);
                colvarProgrammeCode.ColumnName = "ProgrammeCode";
                colvarProgrammeCode.DataType = DbType.AnsiString;
                colvarProgrammeCode.MaxLength = 50;
                colvarProgrammeCode.AutoIncrement = false;
                colvarProgrammeCode.IsNullable = true;
                colvarProgrammeCode.IsPrimaryKey = false;
                colvarProgrammeCode.IsForeignKey = false;
                colvarProgrammeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarProgrammeCode);
                
                TableSchema.TableColumn colvarProgrammeName = new TableSchema.TableColumn(schema);
                colvarProgrammeName.ColumnName = "ProgrammeName";
                colvarProgrammeName.DataType = DbType.AnsiString;
                colvarProgrammeName.MaxLength = 150;
                colvarProgrammeName.AutoIncrement = false;
                colvarProgrammeName.IsNullable = true;
                colvarProgrammeName.IsPrimaryKey = false;
                colvarProgrammeName.IsForeignKey = false;
                colvarProgrammeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarProgrammeName);
                
                TableSchema.TableColumn colvarProgrammeDescription = new TableSchema.TableColumn(schema);
                colvarProgrammeDescription.ColumnName = "ProgrammeDescription";
                colvarProgrammeDescription.DataType = DbType.AnsiString;
                colvarProgrammeDescription.MaxLength = 5000;
                colvarProgrammeDescription.AutoIncrement = false;
                colvarProgrammeDescription.IsNullable = true;
                colvarProgrammeDescription.IsPrimaryKey = false;
                colvarProgrammeDescription.IsForeignKey = false;
                colvarProgrammeDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarProgrammeDescription);
                
                TableSchema.TableColumn colvarProgrammeUrl = new TableSchema.TableColumn(schema);
                colvarProgrammeUrl.ColumnName = "ProgrammeUrl";
                colvarProgrammeUrl.DataType = DbType.AnsiString;
                colvarProgrammeUrl.MaxLength = 250;
                colvarProgrammeUrl.AutoIncrement = false;
                colvarProgrammeUrl.IsNullable = true;
                colvarProgrammeUrl.IsPrimaryKey = false;
                colvarProgrammeUrl.IsForeignKey = false;
                colvarProgrammeUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarProgrammeUrl);
                
                TableSchema.TableColumn colvarProjectID = new TableSchema.TableColumn(schema);
                colvarProjectID.ColumnName = "ProjectID";
                colvarProjectID.DataType = DbType.Guid;
                colvarProjectID.MaxLength = 0;
                colvarProjectID.AutoIncrement = false;
                colvarProjectID.IsNullable = true;
                colvarProjectID.IsPrimaryKey = false;
                colvarProjectID.IsForeignKey = false;
                colvarProjectID.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectID);
                
                TableSchema.TableColumn colvarProjectCode = new TableSchema.TableColumn(schema);
                colvarProjectCode.ColumnName = "ProjectCode";
                colvarProjectCode.DataType = DbType.AnsiString;
                colvarProjectCode.MaxLength = 50;
                colvarProjectCode.AutoIncrement = false;
                colvarProjectCode.IsNullable = true;
                colvarProjectCode.IsPrimaryKey = false;
                colvarProjectCode.IsForeignKey = false;
                colvarProjectCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectCode);
                
                TableSchema.TableColumn colvarProjectName = new TableSchema.TableColumn(schema);
                colvarProjectName.ColumnName = "ProjectName";
                colvarProjectName.DataType = DbType.AnsiString;
                colvarProjectName.MaxLength = 150;
                colvarProjectName.AutoIncrement = false;
                colvarProjectName.IsNullable = true;
                colvarProjectName.IsPrimaryKey = false;
                colvarProjectName.IsForeignKey = false;
                colvarProjectName.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectName);
                
                TableSchema.TableColumn colvarProjectDescription = new TableSchema.TableColumn(schema);
                colvarProjectDescription.ColumnName = "ProjectDescription";
                colvarProjectDescription.DataType = DbType.AnsiString;
                colvarProjectDescription.MaxLength = 5000;
                colvarProjectDescription.AutoIncrement = false;
                colvarProjectDescription.IsNullable = true;
                colvarProjectDescription.IsPrimaryKey = false;
                colvarProjectDescription.IsForeignKey = false;
                colvarProjectDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectDescription);
                
                TableSchema.TableColumn colvarProjectUrl = new TableSchema.TableColumn(schema);
                colvarProjectUrl.ColumnName = "ProjectUrl";
                colvarProjectUrl.DataType = DbType.AnsiString;
                colvarProjectUrl.MaxLength = 250;
                colvarProjectUrl.AutoIncrement = false;
                colvarProjectUrl.IsNullable = true;
                colvarProjectUrl.IsPrimaryKey = false;
                colvarProjectUrl.IsForeignKey = false;
                colvarProjectUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectUrl);
                
                TableSchema.TableColumn colvarSiteID = new TableSchema.TableColumn(schema);
                colvarSiteID.ColumnName = "SiteID";
                colvarSiteID.DataType = DbType.Guid;
                colvarSiteID.MaxLength = 0;
                colvarSiteID.AutoIncrement = false;
                colvarSiteID.IsNullable = false;
                colvarSiteID.IsPrimaryKey = false;
                colvarSiteID.IsForeignKey = false;
                colvarSiteID.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteID);
                
                TableSchema.TableColumn colvarSiteCode = new TableSchema.TableColumn(schema);
                colvarSiteCode.ColumnName = "SiteCode";
                colvarSiteCode.DataType = DbType.AnsiString;
                colvarSiteCode.MaxLength = 50;
                colvarSiteCode.AutoIncrement = false;
                colvarSiteCode.IsNullable = false;
                colvarSiteCode.IsPrimaryKey = false;
                colvarSiteCode.IsForeignKey = false;
                colvarSiteCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteCode);
                
                TableSchema.TableColumn colvarSiteName = new TableSchema.TableColumn(schema);
                colvarSiteName.ColumnName = "SiteName";
                colvarSiteName.DataType = DbType.AnsiString;
                colvarSiteName.MaxLength = 150;
                colvarSiteName.AutoIncrement = false;
                colvarSiteName.IsNullable = false;
                colvarSiteName.IsPrimaryKey = false;
                colvarSiteName.IsForeignKey = false;
                colvarSiteName.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteName);
                
                TableSchema.TableColumn colvarSiteDescription = new TableSchema.TableColumn(schema);
                colvarSiteDescription.ColumnName = "SiteDescription";
                colvarSiteDescription.DataType = DbType.AnsiString;
                colvarSiteDescription.MaxLength = 5000;
                colvarSiteDescription.AutoIncrement = false;
                colvarSiteDescription.IsNullable = true;
                colvarSiteDescription.IsPrimaryKey = false;
                colvarSiteDescription.IsForeignKey = false;
                colvarSiteDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteDescription);
                
                TableSchema.TableColumn colvarSiteUrl = new TableSchema.TableColumn(schema);
                colvarSiteUrl.ColumnName = "SiteUrl";
                colvarSiteUrl.DataType = DbType.AnsiString;
                colvarSiteUrl.MaxLength = 250;
                colvarSiteUrl.AutoIncrement = false;
                colvarSiteUrl.IsNullable = true;
                colvarSiteUrl.IsPrimaryKey = false;
                colvarSiteUrl.IsForeignKey = false;
                colvarSiteUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarSiteUrl);
                
                TableSchema.TableColumn colvarStationCode = new TableSchema.TableColumn(schema);
                colvarStationCode.ColumnName = "StationCode";
                colvarStationCode.DataType = DbType.AnsiString;
                colvarStationCode.MaxLength = 50;
                colvarStationCode.AutoIncrement = false;
                colvarStationCode.IsNullable = false;
                colvarStationCode.IsPrimaryKey = false;
                colvarStationCode.IsForeignKey = false;
                colvarStationCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationCode);
                
                TableSchema.TableColumn colvarStationName = new TableSchema.TableColumn(schema);
                colvarStationName.ColumnName = "StationName";
                colvarStationName.DataType = DbType.AnsiString;
                colvarStationName.MaxLength = 150;
                colvarStationName.AutoIncrement = false;
                colvarStationName.IsNullable = false;
                colvarStationName.IsPrimaryKey = false;
                colvarStationName.IsForeignKey = false;
                colvarStationName.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationName);
                
                TableSchema.TableColumn colvarStationDescription = new TableSchema.TableColumn(schema);
                colvarStationDescription.ColumnName = "StationDescription";
                colvarStationDescription.DataType = DbType.AnsiString;
                colvarStationDescription.MaxLength = 5000;
                colvarStationDescription.AutoIncrement = false;
                colvarStationDescription.IsNullable = true;
                colvarStationDescription.IsPrimaryKey = false;
                colvarStationDescription.IsForeignKey = false;
                colvarStationDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationDescription);
                
                TableSchema.TableColumn colvarStationUrl = new TableSchema.TableColumn(schema);
                colvarStationUrl.ColumnName = "StationUrl";
                colvarStationUrl.DataType = DbType.AnsiString;
                colvarStationUrl.MaxLength = 250;
                colvarStationUrl.AutoIncrement = false;
                colvarStationUrl.IsNullable = true;
                colvarStationUrl.IsPrimaryKey = false;
                colvarStationUrl.IsForeignKey = false;
                colvarStationUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarStationUrl);
                
                TableSchema.TableColumn colvarPhenomenonID = new TableSchema.TableColumn(schema);
                colvarPhenomenonID.ColumnName = "PhenomenonID";
                colvarPhenomenonID.DataType = DbType.Guid;
                colvarPhenomenonID.MaxLength = 0;
                colvarPhenomenonID.AutoIncrement = false;
                colvarPhenomenonID.IsNullable = false;
                colvarPhenomenonID.IsPrimaryKey = false;
                colvarPhenomenonID.IsForeignKey = false;
                colvarPhenomenonID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhenomenonID);
                
                TableSchema.TableColumn colvarPhenomenonCode = new TableSchema.TableColumn(schema);
                colvarPhenomenonCode.ColumnName = "PhenomenonCode";
                colvarPhenomenonCode.DataType = DbType.AnsiString;
                colvarPhenomenonCode.MaxLength = 50;
                colvarPhenomenonCode.AutoIncrement = false;
                colvarPhenomenonCode.IsNullable = false;
                colvarPhenomenonCode.IsPrimaryKey = false;
                colvarPhenomenonCode.IsForeignKey = false;
                colvarPhenomenonCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhenomenonCode);
                
                TableSchema.TableColumn colvarPhenomenonName = new TableSchema.TableColumn(schema);
                colvarPhenomenonName.ColumnName = "PhenomenonName";
                colvarPhenomenonName.DataType = DbType.AnsiString;
                colvarPhenomenonName.MaxLength = 150;
                colvarPhenomenonName.AutoIncrement = false;
                colvarPhenomenonName.IsNullable = false;
                colvarPhenomenonName.IsPrimaryKey = false;
                colvarPhenomenonName.IsForeignKey = false;
                colvarPhenomenonName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhenomenonName);
                
                TableSchema.TableColumn colvarPhenomenonDescription = new TableSchema.TableColumn(schema);
                colvarPhenomenonDescription.ColumnName = "PhenomenonDescription";
                colvarPhenomenonDescription.DataType = DbType.AnsiString;
                colvarPhenomenonDescription.MaxLength = 5000;
                colvarPhenomenonDescription.AutoIncrement = false;
                colvarPhenomenonDescription.IsNullable = true;
                colvarPhenomenonDescription.IsPrimaryKey = false;
                colvarPhenomenonDescription.IsForeignKey = false;
                colvarPhenomenonDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhenomenonDescription);
                
                TableSchema.TableColumn colvarPhenomenonUrl = new TableSchema.TableColumn(schema);
                colvarPhenomenonUrl.ColumnName = "PhenomenonUrl";
                colvarPhenomenonUrl.DataType = DbType.AnsiString;
                colvarPhenomenonUrl.MaxLength = 250;
                colvarPhenomenonUrl.AutoIncrement = false;
                colvarPhenomenonUrl.IsNullable = true;
                colvarPhenomenonUrl.IsPrimaryKey = false;
                colvarPhenomenonUrl.IsForeignKey = false;
                colvarPhenomenonUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhenomenonUrl);
                
                TableSchema.TableColumn colvarOfferingID = new TableSchema.TableColumn(schema);
                colvarOfferingID.ColumnName = "OfferingID";
                colvarOfferingID.DataType = DbType.Guid;
                colvarOfferingID.MaxLength = 0;
                colvarOfferingID.AutoIncrement = false;
                colvarOfferingID.IsNullable = false;
                colvarOfferingID.IsPrimaryKey = false;
                colvarOfferingID.IsForeignKey = false;
                colvarOfferingID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOfferingID);
                
                TableSchema.TableColumn colvarOfferingCode = new TableSchema.TableColumn(schema);
                colvarOfferingCode.ColumnName = "OfferingCode";
                colvarOfferingCode.DataType = DbType.AnsiString;
                colvarOfferingCode.MaxLength = 50;
                colvarOfferingCode.AutoIncrement = false;
                colvarOfferingCode.IsNullable = false;
                colvarOfferingCode.IsPrimaryKey = false;
                colvarOfferingCode.IsForeignKey = false;
                colvarOfferingCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarOfferingCode);
                
                TableSchema.TableColumn colvarOfferingName = new TableSchema.TableColumn(schema);
                colvarOfferingName.ColumnName = "OfferingName";
                colvarOfferingName.DataType = DbType.AnsiString;
                colvarOfferingName.MaxLength = 150;
                colvarOfferingName.AutoIncrement = false;
                colvarOfferingName.IsNullable = false;
                colvarOfferingName.IsPrimaryKey = false;
                colvarOfferingName.IsForeignKey = false;
                colvarOfferingName.IsReadOnly = false;
                
                schema.Columns.Add(colvarOfferingName);
                
                TableSchema.TableColumn colvarOfferingDescription = new TableSchema.TableColumn(schema);
                colvarOfferingDescription.ColumnName = "OfferingDescription";
                colvarOfferingDescription.DataType = DbType.AnsiString;
                colvarOfferingDescription.MaxLength = 5000;
                colvarOfferingDescription.AutoIncrement = false;
                colvarOfferingDescription.IsNullable = true;
                colvarOfferingDescription.IsPrimaryKey = false;
                colvarOfferingDescription.IsForeignKey = false;
                colvarOfferingDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarOfferingDescription);
                
                TableSchema.TableColumn colvarUnitOfMeasureID = new TableSchema.TableColumn(schema);
                colvarUnitOfMeasureID.ColumnName = "UnitOfMeasureID";
                colvarUnitOfMeasureID.DataType = DbType.Guid;
                colvarUnitOfMeasureID.MaxLength = 0;
                colvarUnitOfMeasureID.AutoIncrement = false;
                colvarUnitOfMeasureID.IsNullable = false;
                colvarUnitOfMeasureID.IsPrimaryKey = false;
                colvarUnitOfMeasureID.IsForeignKey = false;
                colvarUnitOfMeasureID.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitOfMeasureID);
                
                TableSchema.TableColumn colvarUnitOfMeasureCode = new TableSchema.TableColumn(schema);
                colvarUnitOfMeasureCode.ColumnName = "UnitOfMeasureCode";
                colvarUnitOfMeasureCode.DataType = DbType.AnsiString;
                colvarUnitOfMeasureCode.MaxLength = 50;
                colvarUnitOfMeasureCode.AutoIncrement = false;
                colvarUnitOfMeasureCode.IsNullable = false;
                colvarUnitOfMeasureCode.IsPrimaryKey = false;
                colvarUnitOfMeasureCode.IsForeignKey = false;
                colvarUnitOfMeasureCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitOfMeasureCode);
                
                TableSchema.TableColumn colvarUnitOfMeasureUnit = new TableSchema.TableColumn(schema);
                colvarUnitOfMeasureUnit.ColumnName = "UnitOfMeasureUnit";
                colvarUnitOfMeasureUnit.DataType = DbType.AnsiString;
                colvarUnitOfMeasureUnit.MaxLength = 100;
                colvarUnitOfMeasureUnit.AutoIncrement = false;
                colvarUnitOfMeasureUnit.IsNullable = false;
                colvarUnitOfMeasureUnit.IsPrimaryKey = false;
                colvarUnitOfMeasureUnit.IsForeignKey = false;
                colvarUnitOfMeasureUnit.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitOfMeasureUnit);
                
                TableSchema.TableColumn colvarUnitOfMeasureSymbol = new TableSchema.TableColumn(schema);
                colvarUnitOfMeasureSymbol.ColumnName = "UnitOfMeasureSymbol";
                colvarUnitOfMeasureSymbol.DataType = DbType.AnsiString;
                colvarUnitOfMeasureSymbol.MaxLength = 20;
                colvarUnitOfMeasureSymbol.AutoIncrement = false;
                colvarUnitOfMeasureSymbol.IsNullable = false;
                colvarUnitOfMeasureSymbol.IsPrimaryKey = false;
                colvarUnitOfMeasureSymbol.IsForeignKey = false;
                colvarUnitOfMeasureSymbol.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitOfMeasureSymbol);
                
                TableSchema.TableColumn colvarIsValid = new TableSchema.TableColumn(schema);
                colvarIsValid.ColumnName = "IsValid";
                colvarIsValid.DataType = DbType.Boolean;
                colvarIsValid.MaxLength = 0;
                colvarIsValid.AutoIncrement = false;
                colvarIsValid.IsNullable = true;
                colvarIsValid.IsPrimaryKey = false;
                colvarIsValid.IsForeignKey = false;
                colvarIsValid.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsValid);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ObservationsDB"].AddSchema("vDatasetsExpansion",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VDatasetsExpansion()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VDatasetsExpansion(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VDatasetsExpansion(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VDatasetsExpansion(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Id")]
        [Bindable(true)]
        public Guid Id 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("ID");
		    }
            set 
		    {
			    SetColumnValue("ID", value);
            }
        }
	      
        [XmlAttribute("Code")]
        [Bindable(true)]
        public string Code 
	    {
		    get
		    {
			    return GetColumnValue<string>("Code");
		    }
            set 
		    {
			    SetColumnValue("Code", value);
            }
        }
	      
        [XmlAttribute("Name")]
        [Bindable(true)]
        public string Name 
	    {
		    get
		    {
			    return GetColumnValue<string>("Name");
		    }
            set 
		    {
			    SetColumnValue("Name", value);
            }
        }
	      
        [XmlAttribute("Description")]
        [Bindable(true)]
        public string Description 
	    {
		    get
		    {
			    return GetColumnValue<string>("Description");
		    }
            set 
		    {
			    SetColumnValue("Description", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("StationID")]
        [Bindable(true)]
        public Guid StationID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("StationID");
		    }
            set 
		    {
			    SetColumnValue("StationID", value);
            }
        }
	      
        [XmlAttribute("PhenomenonOfferingID")]
        [Bindable(true)]
        public Guid PhenomenonOfferingID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("PhenomenonOfferingID");
		    }
            set 
		    {
			    SetColumnValue("PhenomenonOfferingID", value);
            }
        }
	      
        [XmlAttribute("PhenomenonUOMID")]
        [Bindable(true)]
        public Guid PhenomenonUOMID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("PhenomenonUOMID");
		    }
            set 
		    {
			    SetColumnValue("PhenomenonUOMID", value);
            }
        }
	      
        [XmlAttribute("DigitalObjectIdentifierID")]
        [Bindable(true)]
        public int? DigitalObjectIdentifierID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DigitalObjectIdentifierID");
		    }
            set 
		    {
			    SetColumnValue("DigitalObjectIdentifierID", value);
            }
        }
	      
        [XmlAttribute("Count")]
        [Bindable(true)]
        public int? Count 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Count");
		    }
            set 
		    {
			    SetColumnValue("Count", value);
            }
        }
	      
        [XmlAttribute("ValueCount")]
        [Bindable(true)]
        public int? ValueCount 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ValueCount");
		    }
            set 
		    {
			    SetColumnValue("ValueCount", value);
            }
        }
	      
        [XmlAttribute("NullCount")]
        [Bindable(true)]
        public int? NullCount 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NullCount");
		    }
            set 
		    {
			    SetColumnValue("NullCount", value);
            }
        }
	      
        [XmlAttribute("VerifiedCount")]
        [Bindable(true)]
        public int? VerifiedCount 
	    {
		    get
		    {
			    return GetColumnValue<int?>("VerifiedCount");
		    }
            set 
		    {
			    SetColumnValue("VerifiedCount", value);
            }
        }
	      
        [XmlAttribute("UnverifiedCount")]
        [Bindable(true)]
        public int? UnverifiedCount 
	    {
		    get
		    {
			    return GetColumnValue<int?>("UnverifiedCount");
		    }
            set 
		    {
			    SetColumnValue("UnverifiedCount", value);
            }
        }
	      
        [XmlAttribute("StartDate")]
        [Bindable(true)]
        public DateTime? StartDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("StartDate");
		    }
            set 
		    {
			    SetColumnValue("StartDate", value);
            }
        }
	      
        [XmlAttribute("EndDate")]
        [Bindable(true)]
        public DateTime? EndDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EndDate");
		    }
            set 
		    {
			    SetColumnValue("EndDate", value);
            }
        }
	      
        [XmlAttribute("LatitudeNorth")]
        [Bindable(true)]
        public double? LatitudeNorth 
	    {
		    get
		    {
			    return GetColumnValue<double?>("LatitudeNorth");
		    }
            set 
		    {
			    SetColumnValue("LatitudeNorth", value);
            }
        }
	      
        [XmlAttribute("LatitudeSouth")]
        [Bindable(true)]
        public double? LatitudeSouth 
	    {
		    get
		    {
			    return GetColumnValue<double?>("LatitudeSouth");
		    }
            set 
		    {
			    SetColumnValue("LatitudeSouth", value);
            }
        }
	      
        [XmlAttribute("LongitudeWest")]
        [Bindable(true)]
        public double? LongitudeWest 
	    {
		    get
		    {
			    return GetColumnValue<double?>("LongitudeWest");
		    }
            set 
		    {
			    SetColumnValue("LongitudeWest", value);
            }
        }
	      
        [XmlAttribute("LongitudeEast")]
        [Bindable(true)]
        public double? LongitudeEast 
	    {
		    get
		    {
			    return GetColumnValue<double?>("LongitudeEast");
		    }
            set 
		    {
			    SetColumnValue("LongitudeEast", value);
            }
        }
	      
        [XmlAttribute("ElevationMinimum")]
        [Bindable(true)]
        public double? ElevationMinimum 
	    {
		    get
		    {
			    return GetColumnValue<double?>("ElevationMinimum");
		    }
            set 
		    {
			    SetColumnValue("ElevationMinimum", value);
            }
        }
	      
        [XmlAttribute("ElevationMaximum")]
        [Bindable(true)]
        public double? ElevationMaximum 
	    {
		    get
		    {
			    return GetColumnValue<double?>("ElevationMaximum");
		    }
            set 
		    {
			    SetColumnValue("ElevationMaximum", value);
            }
        }
	      
        [XmlAttribute("HashCode")]
        [Bindable(true)]
        public int HashCode 
	    {
		    get
		    {
			    return GetColumnValue<int>("HashCode");
		    }
            set 
		    {
			    SetColumnValue("HashCode", value);
            }
        }
	      
        [XmlAttribute("NeedsUpdate")]
        [Bindable(true)]
        public bool? NeedsUpdate 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("NeedsUpdate");
		    }
            set 
		    {
			    SetColumnValue("NeedsUpdate", value);
            }
        }
	      
        [XmlAttribute("AddedAt")]
        [Bindable(true)]
        public DateTime? AddedAt 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("AddedAt");
		    }
            set 
		    {
			    SetColumnValue("AddedAt", value);
            }
        }
	      
        [XmlAttribute("AddedBy")]
        [Bindable(true)]
        public string AddedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("AddedBy");
		    }
            set 
		    {
			    SetColumnValue("AddedBy", value);
            }
        }
	      
        [XmlAttribute("UpdatedAt")]
        [Bindable(true)]
        public DateTime? UpdatedAt 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("UpdatedAt");
		    }
            set 
		    {
			    SetColumnValue("UpdatedAt", value);
            }
        }
	      
        [XmlAttribute("UpdatedBy")]
        [Bindable(true)]
        public string UpdatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("UpdatedBy");
		    }
            set 
		    {
			    SetColumnValue("UpdatedBy", value);
            }
        }
	      
        [XmlAttribute("UserId")]
        [Bindable(true)]
        public Guid UserId 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("UserId");
		    }
            set 
		    {
			    SetColumnValue("UserId", value);
            }
        }
	      
        [XmlAttribute("RowVersion")]
        [Bindable(true)]
        public byte[] RowVersion 
	    {
		    get
		    {
			    return GetColumnValue<byte[]>("RowVersion");
		    }
            set 
		    {
			    SetColumnValue("RowVersion", value);
            }
        }
	      
        [XmlAttribute("CSVFileName")]
        [Bindable(true)]
        public string CSVFileName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CSVFileName");
		    }
            set 
		    {
			    SetColumnValue("CSVFileName", value);
            }
        }
	      
        [XmlAttribute("ExcelFileName")]
        [Bindable(true)]
        public string ExcelFileName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ExcelFileName");
		    }
            set 
		    {
			    SetColumnValue("ExcelFileName", value);
            }
        }
	      
        [XmlAttribute("NetCDFFileName")]
        [Bindable(true)]
        public string NetCDFFileName 
	    {
		    get
		    {
			    return GetColumnValue<string>("NetCDFFileName");
		    }
            set 
		    {
			    SetColumnValue("NetCDFFileName", value);
            }
        }
	      
        [XmlAttribute("OrganisationID")]
        [Bindable(true)]
        public Guid? OrganisationID 
	    {
		    get
		    {
			    return GetColumnValue<Guid?>("OrganisationID");
		    }
            set 
		    {
			    SetColumnValue("OrganisationID", value);
            }
        }
	      
        [XmlAttribute("OrganisationCode")]
        [Bindable(true)]
        public string OrganisationCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrganisationCode");
		    }
            set 
		    {
			    SetColumnValue("OrganisationCode", value);
            }
        }
	      
        [XmlAttribute("OrganisationName")]
        [Bindable(true)]
        public string OrganisationName 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrganisationName");
		    }
            set 
		    {
			    SetColumnValue("OrganisationName", value);
            }
        }
	      
        [XmlAttribute("OrganisationDescription")]
        [Bindable(true)]
        public string OrganisationDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrganisationDescription");
		    }
            set 
		    {
			    SetColumnValue("OrganisationDescription", value);
            }
        }
	      
        [XmlAttribute("OrganisationUrl")]
        [Bindable(true)]
        public string OrganisationUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrganisationUrl");
		    }
            set 
		    {
			    SetColumnValue("OrganisationUrl", value);
            }
        }
	      
        [XmlAttribute("ProgrammeID")]
        [Bindable(true)]
        public Guid? ProgrammeID 
	    {
		    get
		    {
			    return GetColumnValue<Guid?>("ProgrammeID");
		    }
            set 
		    {
			    SetColumnValue("ProgrammeID", value);
            }
        }
	      
        [XmlAttribute("ProgrammeCode")]
        [Bindable(true)]
        public string ProgrammeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProgrammeCode");
		    }
            set 
		    {
			    SetColumnValue("ProgrammeCode", value);
            }
        }
	      
        [XmlAttribute("ProgrammeName")]
        [Bindable(true)]
        public string ProgrammeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProgrammeName");
		    }
            set 
		    {
			    SetColumnValue("ProgrammeName", value);
            }
        }
	      
        [XmlAttribute("ProgrammeDescription")]
        [Bindable(true)]
        public string ProgrammeDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProgrammeDescription");
		    }
            set 
		    {
			    SetColumnValue("ProgrammeDescription", value);
            }
        }
	      
        [XmlAttribute("ProgrammeUrl")]
        [Bindable(true)]
        public string ProgrammeUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProgrammeUrl");
		    }
            set 
		    {
			    SetColumnValue("ProgrammeUrl", value);
            }
        }
	      
        [XmlAttribute("ProjectID")]
        [Bindable(true)]
        public Guid? ProjectID 
	    {
		    get
		    {
			    return GetColumnValue<Guid?>("ProjectID");
		    }
            set 
		    {
			    SetColumnValue("ProjectID", value);
            }
        }
	      
        [XmlAttribute("ProjectCode")]
        [Bindable(true)]
        public string ProjectCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectCode");
		    }
            set 
		    {
			    SetColumnValue("ProjectCode", value);
            }
        }
	      
        [XmlAttribute("ProjectName")]
        [Bindable(true)]
        public string ProjectName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectName");
		    }
            set 
		    {
			    SetColumnValue("ProjectName", value);
            }
        }
	      
        [XmlAttribute("ProjectDescription")]
        [Bindable(true)]
        public string ProjectDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectDescription");
		    }
            set 
		    {
			    SetColumnValue("ProjectDescription", value);
            }
        }
	      
        [XmlAttribute("ProjectUrl")]
        [Bindable(true)]
        public string ProjectUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectUrl");
		    }
            set 
		    {
			    SetColumnValue("ProjectUrl", value);
            }
        }
	      
        [XmlAttribute("SiteID")]
        [Bindable(true)]
        public Guid SiteID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("SiteID");
		    }
            set 
		    {
			    SetColumnValue("SiteID", value);
            }
        }
	      
        [XmlAttribute("SiteCode")]
        [Bindable(true)]
        public string SiteCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("SiteCode");
		    }
            set 
		    {
			    SetColumnValue("SiteCode", value);
            }
        }
	      
        [XmlAttribute("SiteName")]
        [Bindable(true)]
        public string SiteName 
	    {
		    get
		    {
			    return GetColumnValue<string>("SiteName");
		    }
            set 
		    {
			    SetColumnValue("SiteName", value);
            }
        }
	      
        [XmlAttribute("SiteDescription")]
        [Bindable(true)]
        public string SiteDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("SiteDescription");
		    }
            set 
		    {
			    SetColumnValue("SiteDescription", value);
            }
        }
	      
        [XmlAttribute("SiteUrl")]
        [Bindable(true)]
        public string SiteUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("SiteUrl");
		    }
            set 
		    {
			    SetColumnValue("SiteUrl", value);
            }
        }
	      
        [XmlAttribute("StationCode")]
        [Bindable(true)]
        public string StationCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("StationCode");
		    }
            set 
		    {
			    SetColumnValue("StationCode", value);
            }
        }
	      
        [XmlAttribute("StationName")]
        [Bindable(true)]
        public string StationName 
	    {
		    get
		    {
			    return GetColumnValue<string>("StationName");
		    }
            set 
		    {
			    SetColumnValue("StationName", value);
            }
        }
	      
        [XmlAttribute("StationDescription")]
        [Bindable(true)]
        public string StationDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("StationDescription");
		    }
            set 
		    {
			    SetColumnValue("StationDescription", value);
            }
        }
	      
        [XmlAttribute("StationUrl")]
        [Bindable(true)]
        public string StationUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("StationUrl");
		    }
            set 
		    {
			    SetColumnValue("StationUrl", value);
            }
        }
	      
        [XmlAttribute("PhenomenonID")]
        [Bindable(true)]
        public Guid PhenomenonID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("PhenomenonID");
		    }
            set 
		    {
			    SetColumnValue("PhenomenonID", value);
            }
        }
	      
        [XmlAttribute("PhenomenonCode")]
        [Bindable(true)]
        public string PhenomenonCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhenomenonCode");
		    }
            set 
		    {
			    SetColumnValue("PhenomenonCode", value);
            }
        }
	      
        [XmlAttribute("PhenomenonName")]
        [Bindable(true)]
        public string PhenomenonName 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhenomenonName");
		    }
            set 
		    {
			    SetColumnValue("PhenomenonName", value);
            }
        }
	      
        [XmlAttribute("PhenomenonDescription")]
        [Bindable(true)]
        public string PhenomenonDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhenomenonDescription");
		    }
            set 
		    {
			    SetColumnValue("PhenomenonDescription", value);
            }
        }
	      
        [XmlAttribute("PhenomenonUrl")]
        [Bindable(true)]
        public string PhenomenonUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhenomenonUrl");
		    }
            set 
		    {
			    SetColumnValue("PhenomenonUrl", value);
            }
        }
	      
        [XmlAttribute("OfferingID")]
        [Bindable(true)]
        public Guid OfferingID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("OfferingID");
		    }
            set 
		    {
			    SetColumnValue("OfferingID", value);
            }
        }
	      
        [XmlAttribute("OfferingCode")]
        [Bindable(true)]
        public string OfferingCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("OfferingCode");
		    }
            set 
		    {
			    SetColumnValue("OfferingCode", value);
            }
        }
	      
        [XmlAttribute("OfferingName")]
        [Bindable(true)]
        public string OfferingName 
	    {
		    get
		    {
			    return GetColumnValue<string>("OfferingName");
		    }
            set 
		    {
			    SetColumnValue("OfferingName", value);
            }
        }
	      
        [XmlAttribute("OfferingDescription")]
        [Bindable(true)]
        public string OfferingDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("OfferingDescription");
		    }
            set 
		    {
			    SetColumnValue("OfferingDescription", value);
            }
        }
	      
        [XmlAttribute("UnitOfMeasureID")]
        [Bindable(true)]
        public Guid UnitOfMeasureID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("UnitOfMeasureID");
		    }
            set 
		    {
			    SetColumnValue("UnitOfMeasureID", value);
            }
        }
	      
        [XmlAttribute("UnitOfMeasureCode")]
        [Bindable(true)]
        public string UnitOfMeasureCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("UnitOfMeasureCode");
		    }
            set 
		    {
			    SetColumnValue("UnitOfMeasureCode", value);
            }
        }
	      
        [XmlAttribute("UnitOfMeasureUnit")]
        [Bindable(true)]
        public string UnitOfMeasureUnit 
	    {
		    get
		    {
			    return GetColumnValue<string>("UnitOfMeasureUnit");
		    }
            set 
		    {
			    SetColumnValue("UnitOfMeasureUnit", value);
            }
        }
	      
        [XmlAttribute("UnitOfMeasureSymbol")]
        [Bindable(true)]
        public string UnitOfMeasureSymbol 
	    {
		    get
		    {
			    return GetColumnValue<string>("UnitOfMeasureSymbol");
		    }
            set 
		    {
			    SetColumnValue("UnitOfMeasureSymbol", value);
            }
        }
	      
        [XmlAttribute("IsValid")]
        [Bindable(true)]
        public bool? IsValid 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("IsValid");
		    }
            set 
		    {
			    SetColumnValue("IsValid", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Id = @"ID";
            
            public static string Code = @"Code";
            
            public static string Name = @"Name";
            
            public static string Description = @"Description";
            
            public static string Title = @"Title";
            
            public static string StationID = @"StationID";
            
            public static string PhenomenonOfferingID = @"PhenomenonOfferingID";
            
            public static string PhenomenonUOMID = @"PhenomenonUOMID";
            
            public static string DigitalObjectIdentifierID = @"DigitalObjectIdentifierID";
            
            public static string Count = @"Count";
            
            public static string ValueCount = @"ValueCount";
            
            public static string NullCount = @"NullCount";
            
            public static string VerifiedCount = @"VerifiedCount";
            
            public static string UnverifiedCount = @"UnverifiedCount";
            
            public static string StartDate = @"StartDate";
            
            public static string EndDate = @"EndDate";
            
            public static string LatitudeNorth = @"LatitudeNorth";
            
            public static string LatitudeSouth = @"LatitudeSouth";
            
            public static string LongitudeWest = @"LongitudeWest";
            
            public static string LongitudeEast = @"LongitudeEast";
            
            public static string ElevationMinimum = @"ElevationMinimum";
            
            public static string ElevationMaximum = @"ElevationMaximum";
            
            public static string HashCode = @"HashCode";
            
            public static string NeedsUpdate = @"NeedsUpdate";
            
            public static string AddedAt = @"AddedAt";
            
            public static string AddedBy = @"AddedBy";
            
            public static string UpdatedAt = @"UpdatedAt";
            
            public static string UpdatedBy = @"UpdatedBy";
            
            public static string UserId = @"UserId";
            
            public static string RowVersion = @"RowVersion";
            
            public static string CSVFileName = @"CSVFileName";
            
            public static string ExcelFileName = @"ExcelFileName";
            
            public static string NetCDFFileName = @"NetCDFFileName";
            
            public static string OrganisationID = @"OrganisationID";
            
            public static string OrganisationCode = @"OrganisationCode";
            
            public static string OrganisationName = @"OrganisationName";
            
            public static string OrganisationDescription = @"OrganisationDescription";
            
            public static string OrganisationUrl = @"OrganisationUrl";
            
            public static string ProgrammeID = @"ProgrammeID";
            
            public static string ProgrammeCode = @"ProgrammeCode";
            
            public static string ProgrammeName = @"ProgrammeName";
            
            public static string ProgrammeDescription = @"ProgrammeDescription";
            
            public static string ProgrammeUrl = @"ProgrammeUrl";
            
            public static string ProjectID = @"ProjectID";
            
            public static string ProjectCode = @"ProjectCode";
            
            public static string ProjectName = @"ProjectName";
            
            public static string ProjectDescription = @"ProjectDescription";
            
            public static string ProjectUrl = @"ProjectUrl";
            
            public static string SiteID = @"SiteID";
            
            public static string SiteCode = @"SiteCode";
            
            public static string SiteName = @"SiteName";
            
            public static string SiteDescription = @"SiteDescription";
            
            public static string SiteUrl = @"SiteUrl";
            
            public static string StationCode = @"StationCode";
            
            public static string StationName = @"StationName";
            
            public static string StationDescription = @"StationDescription";
            
            public static string StationUrl = @"StationUrl";
            
            public static string PhenomenonID = @"PhenomenonID";
            
            public static string PhenomenonCode = @"PhenomenonCode";
            
            public static string PhenomenonName = @"PhenomenonName";
            
            public static string PhenomenonDescription = @"PhenomenonDescription";
            
            public static string PhenomenonUrl = @"PhenomenonUrl";
            
            public static string OfferingID = @"OfferingID";
            
            public static string OfferingCode = @"OfferingCode";
            
            public static string OfferingName = @"OfferingName";
            
            public static string OfferingDescription = @"OfferingDescription";
            
            public static string UnitOfMeasureID = @"UnitOfMeasureID";
            
            public static string UnitOfMeasureCode = @"UnitOfMeasureCode";
            
            public static string UnitOfMeasureUnit = @"UnitOfMeasureUnit";
            
            public static string UnitOfMeasureSymbol = @"UnitOfMeasureSymbol";
            
            public static string IsValid = @"IsValid";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
